<?xml version="1.0"?>
<!--
Copyright 2013 EMC Corporation. All rights reserved. Published in the USA.

EMC believes the information in this publication is accurate as of its publication date. The information is subject to change without notice.

The information in this publication is provided as is. EMC Corporation makes no representations or warranties of any kind with respect to the information in this publication, and specifically disclaims implied warranties of merchantability or fitness for a particular purpose. Use, copying, and distribution of any EMC software described in this publication requires an applicable software license.

EMC2, EMC, and the EMC logo are registered trademarks or trademarks of EMC Corporation in the United States and other countries. All other trademarks used herein are the property of their respective owners.

For the most up-to-date regulatory document for your product line, go to the technical documentation and advisories section on EMC online support.
-->
<xs:schema targetNamespace="http://www.emc.com/em/2012/07/univmax/restapi/performance"
           xmlns:tns="http://www.emc.com/em/2012/07/univmax/restapi/performance"
           xmlns:cmn="http://www.emc.com/em/2012/07/univmax/restapi/common"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           version="1.0">
    <xs:import namespace="http://www.emc.com/em/2012/07/univmax/restapi/common" schemaLocation="common.xsd"/>

    <!--
        AlertSeverity
    -->
    <xs:simpleType name="AlertSeverity">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="INFORMATION"/>
            <xs:enumeration value="MINOR"/>
            <xs:enumeration value="WARNING"/>
            <xs:enumeration value="CRITICAL"/>
            <xs:enumeration value="FATAL"/>
        </xs:restriction>
    </xs:simpleType>

    <!--
        AlertState
    -->
    <xs:simpleType name="AlertState">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NEW"/>
            <xs:enumeration value="ACKNOWLEDGED"/>
            <xs:enumeration value="CLEARED"/>
        </xs:restriction>
    </xs:simpleType>

    <!--
        StatInfo
    -->
    <xs:complexType name="StatInfoType" abstract="true">
        <xs:sequence>
            <xs:element name="firstAvailableDate" type="cmn:DateType"/>
            <xs:element name="lastAvailableDate" type="cmn:DateType"/>
        </xs:sequence>
    </xs:complexType>

    <!--
        Array Keys
    -->
    <xs:complexType name="ArrayInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayInfo" type="tns:ArrayInfoType"/>

    <xs:complexType name="ArrayKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:arrayInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayKeyResult" type="tns:ArrayKeyResultType"/>

    <!--
        Array Alerts
    -->
    <xs:complexType name="ArrayAlertParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayAlertParam" type="tns:ArrayAlertParamType"/>

    <xs:complexType name="Alert" abstract="true">
        <xs:sequence>
            <xs:element name="alertId" type="xs:string"/>
            <xs:element name="alertType" type="xs:string"/>
            <xs:element name="timeStamp" type="xs:long"/>
            <xs:element name="modifiedtimeStamp" type="xs:long"/>
            <xs:element name="errorCode" type="xs:string"/>
            <xs:element name="alertCounts" type="xs:long"/>
            <xs:element name="serverity" type="tns:AlertSeverity"/>
            <xs:element name="category" type="xs:string"/>
            <xs:element name="state" type="tns:AlertState"/>
            <xs:element name="acknowledge" type="xs:boolean"/>
            <xs:element name="description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ArrayAlertType">
        <xs:complexContent>
            <xs:extension base="tns:Alert">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element name="metric" type="xs:string"/>
                    <xs:element name="value" type="xs:float"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayAlert" type="tns:ArrayAlertType"/>

    <xs:complexType name="ArrayAlertResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element ref="tns:arrayAlert"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayAlertResult" type="tns:ArrayAlertResultType"/>

    <!--
        Array Metrics
    -->
    <xs:simpleType name="ArrayMetric">
        <xs:restriction base="xs:string">
            <!--
                The average time it takes a cache slot in LRU0 to be freed up. It is the average time from the first use of the contents to its reuse by another address.
            -->
            <xs:enumeration value="AVG_LRU0_FALL_THRU_TIME"/>
            <!--
                The total IO from all BE directors to the disks per second.
            -->
            <xs:enumeration value="BE_IOS_PER_SEC"/>
            <!--
                A data transfer of a read between the cache and the director.
            -->
            <xs:enumeration value="BE_READS"/>
            <!--
                A data transfer of a write between the cache and the director.
            -->
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The tracks per second saved into disks.
            -->
            <xs:enumeration value="DESTAGED_TRACKS_PER_SEC"/>
            <!--
                The number of times each second that the write-pending limit for a specific Symmetrix volume was reached.
            -->
            <xs:enumeration value="DEV_WRITE_PENDING_EVENT_PER_SEC"/>
            <!--
                A read data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment, or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="FE_READ_REQS_PER_SEC"/>
            <!--
                A write data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment, or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="FE_WRITE_REQS_PER_SEC"/>
            <!--
                The number of host MBs written and read by all of the Symmetrix volumes each second.
            -->
            <xs:enumeration value="HA_MB_PER_SEC"/>
            <!--
                The total requests from all FE directors per second that were satisfied from cache.
            -->
            <xs:enumeration value="HIT_PER_SEC"/>
            <!--
                The number of host IO operations performed each second by all Symmetrix volumes, including writes and random and sequential reads.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                The number of host MBs read by all of the Symmetrix volumes each second.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The number of host MBs written by all of the Symmetrix volumes each second.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of IO operations performed by all of the Symmetrix volumes, for which the read data was in cache and the write operation could be sent directly to cache without having to wait for data to be destaged from cache to the disks.
            -->
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                The percent of total read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                The percent of total write IO operations performed by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                The tracks per second pre-fetched from disk to cache upon detection of a sequential read stream.
            -->
            <xs:enumeration value="PREFETCHED_TRACK_PER_SEC"/>
            <!--
                The number of host read operations performed each second by all Symmetrix volumes.
            -->
            <xs:enumeration value="READS"/>
            <!--
                The total read requests from all FE directors per second that were satisfied from cache.
            -->
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                Total read requests from all FE directors per second that were misses. A miss occurs when the requested read data is not found in cache.
            -->
            <xs:enumeration value="READ_MISS_PER_SEC"/>
            <!--
                A data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment, or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="REQUEST_PER_SEC"/>
            <!--
                The calculated system read response time.
            -->
            <xs:enumeration value="RESPONSE_TIME_READ"/>
            <!--
                The calculated system write response time.
            -->
            <xs:enumeration value="RESPONSE_TIME_WRITE"/>
            <!--
                The number of times each second that write activity was heavy enough to use up the system limit set for write tracks occupying cache. When the limit is reached, writes are deferred until data in cache is written to disk.
            -->
            <xs:enumeration value="SYS_WRITE_PENDING_EVENT_PER_SEC"/>
            <!--
                A data transfer of a read or write between the cache and the director.
            -->
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The percent of system cache that is write pending.
            -->
            <xs:enumeration value="TOTAL_CACHE_UTILIZATION"/>
            <!--
                The number of system cache slots that are write pending.
            -->
            <xs:enumeration value="WP"/>
            <!--
                The percent of the target % at which writes are delayed. The range is from 40% to 80%.
            -->
            <xs:enumeration value="WP_LIMIT"/>
            <!--
                The total write requests from all FE directors per second that were satisfied from cache.
            -->
            <xs:enumeration value="WRITE_HIT_PER_SEC"/>
            <!--
                The total write requests from all FE directors per second that were misses. A miss occurs when the write operation had to wait while data was destaged from cache to the disks.
            -->
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
            <!--
                The number of host write operations performed each second by all Symmetrix volumes.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                The number of reads and writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number of reads per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number of writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_IOS"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                The number of Reads per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            -->
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of Writes per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITES"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ArrayParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:ArrayMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayParam" type="tns:ArrayParamType"/>

    <xs:complexType name="ArrayResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_LRU0_FALL_THRU_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_IOS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="DESTAGED_TRACKS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEV_WRITE_PENDING_EVENT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="FE_READ_REQS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="FE_WRITE_REQS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="HA_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACK_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="REQUEST_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYS_WRITE_PENDING_EVENT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_CACHE_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP_LIMIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="arrayResult" type="tns:ArrayResultType"/>

    <!--
        FEDirector Keys
    -->
    <xs:complexType name="FEDirectorKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorKeyParam" type="tns:FEDirectorKeyParamType"/>

    <xs:complexType name="FEDirectorInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:directorId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorInfo" type="tns:FEDirectorInfoType"/>

    <xs:complexType name="FEDirectorKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:feDirectorInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorKeyResult" type="tns:FEDirectorKeyResultType"/>

    <!--
        FEDirector Metrics
    -->
    <xs:simpleType name="FEDirectorMetric">
        <xs:restriction base="xs:string">
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_4"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_3"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_2"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_1"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_0"/>
            <!--
                 The count of the IOs passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_IO_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_4_TO_8"/>
            <!--
                The average time that it took to serve one system call.
            -->
            <xs:enumeration value="AVR_TIME_PER_SYSCALL"/>
            <!--
                The utilization percent for port 0.
            -->
            <xs:enumeration value="PORT_0_UTILIZATION"/>
            <!--
                 These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_OVER_64"/>
            <!--
                A read request that is immediately serviced from the cache (instead of having to wait for the data to arrive from the disk.)
            -->
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                The number of MBs per second on port 1 that were writes.
            -->
            <xs:enumeration value="PORT_1_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                The number of MBs per second on port 1 that were reads.
            -->
            <xs:enumeration value="PORT_1_MBYTES_READ_PER_SEC"/>
            <!--
                A request that is immediately serviced from the cache (instead of having to wait for the data to arrive, or destage from the disk.)
            -->
            <xs:enumeration value="HIT_PER_SEC"/>
            <!--
                A write request that cannot be satisfied immediately from the cache and needs to wait for the data to be destaged to the disk.
            -->
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_OVER_64"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_16_TO_32"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_0_TO_1"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_4_TO_8"/>
            <!--
                The size of the data transfer from the host in MBs per second.
            -->
            <xs:enumeration value="HA_MB_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_0_TO_1"/>
            <!--
                The total number of calls seen by this director.
            -->
            <xs:enumeration value="SYSCALL_COUNT_PER_SEC"/>
            <!--
                The average IO size served by port 1.
            -->
            <xs:enumeration value="PORT_1_AVG_REQ_SIZE_KB"/>
            <!--
                A write miss due to the system write pending limit having been reached.
            -->
            <xs:enumeration value="SYS_WRITE_PENDING_EVENT_PER_SEC"/>
            <!--
                The size of the IOs in MBs passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_MB_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_16_TO_32"/>
            <!--
                The count of the IOs passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_IO_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_OVER_64"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_32_TO_64"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_1_TO_2"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_1_TO_2"/>
            <!--
                The number of calls per second sent from the local director to another director in the same system.
            -->
            <xs:enumeration value="SYSCALL_REMOTE_DIR_COUNT_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_8_TO_16"/>
            <!--
                The number of calls per second sent via RDF to a remote system.
            -->
            <xs:enumeration value="SYSCALL_RDF_DIR_COUNT_PER_SEC"/>
            <!--
                A write miss due to the volume write pending limit having been reached.
            -->
            <xs:enumeration value="DEV_WRITE_PENDING_EVENT_PER_SEC"/>
            <!--
                The number of MBs per second on port 0 that were writes.
            -->
            <xs:enumeration value="PORT_0_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_32_TO_64"/>
            <!--
                The average IO size served by port 0.
            -->
            <xs:enumeration value="PORT_0_AVG_REQ_SIZE_KB"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_8_TO_16"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_16_TO_32"/>
            <!--
                The utilization percent for port 1.
            -->
            <xs:enumeration value="PORT_1_UTILIZATION"/>
            <!--
                These buckets show the distribution of the total average Write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_0_TO_1"/>
            <!--
                The number of MBs per second on port 0 that were reads.
            -->
            <xs:enumeration value="PORT_0_MBYTES_READ_PER_SEC"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_2_TO_4"/>
            <!--
                The percent of write requests out of host commands for data transfer.
            -->
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                The total number of reads to the FE directors.
            -->
            <xs:enumeration value="TOTAL_READ_COUNT"/>
            <!--
                A host command for data transfer.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_2_TO_4"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_8_TO_16"/>
            <!--
                A calculated average response time for writes.
            -->
            <xs:enumeration value="RESPONSE_TIME_WRITE"/>
            <!--
                A calculated average response time for reads.
            -->
            <xs:enumeration value="RESPONSE_TIME_READ"/>
            <!--
                A write request that is immediately serviced from the cache (instead of having to wait for the data to be destaged to the disk.)
            -->
            <xs:enumeration value="WRITE_HIT_PER_SEC"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_32_TO_64"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_0_TO_1"/>
            <!--
                The percent of read requests that are served from cache.
            -->
            <xs:enumeration value="PERCENT_READ_HIT"/>
            <!--
                The total number of writes to the FE directors.
            -->
            <xs:enumeration value="TOTAL_WRITE_COUNT"/>
            <!--
                These buckets show the distribution of the total average write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_1_TO_2"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_9"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_8"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_7"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_6"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_5"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_4"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_3"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_2"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_1"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. After incrementing the queue depth bucket, it increments the associated count bucket by 1. This then represents the number of IOs that encountered queues of certain depth during the past time interval. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="QUEUE_DEPTH_COUNT_RANGE_0"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_8_TO_16"/>
            <!--
                The number of gigabits moving through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_SPEED_GBITS_PER_SEC"/>
            <!--
                The data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="REQUEST_PER_SEC"/>
            <!--
                The percent of read requests out of host commands for data transfer.
            -->
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                A request that is a miss.
            -->
            <xs:enumeration value="MISS_PER_SEC"/>
            <!--
                The percent of time the directory is idle.
            -->
            <xs:enumeration value="PERCENT_IDLE"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_1_TO_2"/>
            <!--
                The percent of write requests that were satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_WRITE_HIT"/>
            <!--
                A write data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                These buckets show the distribution of the total average write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_2_TO_4"/>
            <!--
                These buckets show the distribution of the total average write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_16_TO_32"/>
            <!--
                These buckets show the distribution of the number of writes to the FE directors over the specified time range.
            -->
            <xs:enumeration value="WRITE_RT_COUNT_RANGE_4_TO_8"/>
            <!--
                The percent of time the directory is busy.
            -->
            <xs:enumeration value="PERCENT_BUSY"/>
            <!--
                The percent of requests that are served from cache.
            -->
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                These buckets show the distribution of the total average read response time.
            -->
            <xs:enumeration value="AVG_READ_RT_4_TO_8"/>
            <!--
                A write miss due to the desired cache slot being locked by another request.
            -->
            <xs:enumeration value="SLOT_COLLISION_PER_SEC"/>
            <!--
                A read data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment or both. The requests rate should be either equal to or greater than the IO rate.
            -->
            <xs:enumeration value="READS"/>
            <!--
                 A read request that cannot be satisfied immediately from the cache and needs to wait for the data to arrive from the disk.
            -->
            <xs:enumeration value="READ_MISS_PER_SEC"/>
            <!--
                These buckets show the distribution of the number of reads to the FE directors over the specified time range.
            -->
            <xs:enumeration value="READ_RT_COUNT_RANGE_2_TO_4"/>
            <!--
                These buckets show the distribution of the total average Write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_32_TO_64"/>
            <!--
                These buckets show the distribution of the total average Write response time.
            -->
            <xs:enumeration value="AVG_WRITE_RT_OVER_64"/>
            <!--
                The number of gigabits moving through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_SPEED_GBITS_PER_SEC"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_9"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_8"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_7"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_6"/>
            <!--
                As an IO enters the queue it first checks how deep the queue is. Based on depth, the applicable queue depth bucket increments with the value seen by the IO. For example, an IO that encounters a queue depth of 7 will increment bucket #2 (depth 5-9 for OS or 7-14 for MF) by 7. The intent of these buckets is to identify IO bursts which in turn generate large queues and long response times.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH_RANGE_5"/>
            <!--
                The size of the IOs in MBs passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_MB_PER_SEC"/>
            <!--
                Average time in milliseconds that IOs are delayed because IO quota limits.
            -->
            <xs:enumeration value="QUOTA_AVG_DELAYED_TIME"/>
            <!--
                The number of IOs per second that are delayed by the director due to IO quota limits.
            -->
            <xs:enumeration value="QUOTA_DELAYED_IOS"/>
            <!--
                The time in milliseconds that IOs are delayed because IO quota limits.
            -->
            <xs:enumeration value="QUOTA_DELAYED_TIME"/>
            <!--
                The number of IOs per second that are executed by the director under IO quota limits.
            -->
            <xs:enumeration value="QUOTA_IO_RATE"/>
            <!--
                The throughput in MBs that are transferred by the director under IO quota limits.
            -->
            <xs:enumeration value="QUOTA_MB_RATE"/>
            <!--
                The percent of IOs delayed due to quota limits.
            -->
            <xs:enumeration value="QUOTA_PERCENT_DELAYED_IOS"/>
            <!--
                The count of the reads passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_READ_PER_SEC"/>
            <!--
                The count of the reads passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_READ_PER_SEC"/>
            <!--
                The count of the writes passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_WRITE_PER_SEC"/>
            <!--
                The count of the writes passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_WRITE_PER_SEC"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="FEDirectorParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:directorId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:FEDirectorMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorParam" type="tns:FEDirectorParamType"/>

    <xs:complexType name="FEDirectorResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_3" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_0" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_4_TO_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVR_TIME_PER_SYSCALL" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_OVER_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MBYTES_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_OVER_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_16_TO_32" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_0_TO_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_4_TO_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="HA_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_0_TO_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_AVG_REQ_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYS_WRITE_PENDING_EVENT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_16_TO_32" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_OVER_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_32_TO_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_1_TO_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_1_TO_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_REMOTE_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_8_TO_16" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_RDF_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEV_WRITE_PENDING_EVENT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_32_TO_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_AVG_REQ_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_8_TO_16" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_16_TO_32" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_0_TO_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MBYTES_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_2_TO_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_READ_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_2_TO_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_8_TO_16" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_32_TO_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_0_TO_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_WRITE_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_1_TO_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_9" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_7" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_6" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_5" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_3" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUEUE_DEPTH_COUNT_RANGE_0" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_8_TO_16" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_SPEED_GBITS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="REQUEST_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_1_TO_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_2_TO_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_16_TO_32" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_RT_COUNT_RANGE_4_TO_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_RT_4_TO_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="SLOT_COLLISION_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_RT_COUNT_RANGE_2_TO_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_32_TO_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_RT_OVER_64" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_SPEED_GBITS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_9" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_7" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_6" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH_RANGE_5" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_AVG_DELAYED_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_DELAYED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_DELAYED_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_PERCENT_DELAYED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorResult" type="tns:FEDirectorResultType"/>

    <!--
        BEDirector Keys
    -->
    <xs:complexType name="BEDirectorKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="beDirectorKeyParam" type="tns:BEDirectorKeyParamType"/>

    <xs:complexType name="BEDirectorInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:directorId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="beDirectorInfo" type="tns:BEDirectorInfoType"/>

    <xs:complexType name="BEDirectorKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:beDirectorInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="beDirectorKeyResult" type="tns:BEDirectorKeyResultType"/>

    <!--
        BEDirector Metrics
    -->
    <xs:simpleType name="BEDirectorMetric">
        <xs:restriction base="xs:string">
            <!--
                The average time spent processing all system calls.
            -->
            <xs:enumeration value="AVR_TIME_PER_SYSCALL"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="CLONE_COPY_READ"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="CLONE_COPY_WRITE"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="COPY_ON_FIRST_ACCESS"/>
            <!--
                An IO command to the disk.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                The total IO (reads and writes) per second in MBs.
            -->
            <xs:enumeration value="MB_RATE"/>
            <!--
                The reads per second in MBs.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The writes per second in MBs.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="OPTIMIZED_WRITE"/>
            <!--
                The percent of time that a director is busy.
            -->
            <xs:enumeration value="PERCENT_BUSY"/>
            <!--
                The percent of time that a director is idle.
            -->
            <xs:enumeration value="PERCENT_IDLE"/>
            <!--
                The percent of read requests out of the total requests.
            -->
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                The percent of write requests out of the total requests.
            -->
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="PHCO_REBUILD_COPY"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="PHCO_REBUILD_READ"/>
            <!--
                The average IO request moving through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_AVG_REQ_SIZE_KB"/>
            <!--
                The number of IOs moving through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_IO_PER_SEC"/>
            <!--
                The total MBs moving through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_MB_PER_SEC"/>
            <!--
                The number of gigabits moving through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_SPEED_GBITS_PER_SEC"/>
            <!--
                The utilization of port 0.
            -->
            <xs:enumeration value="PORT_0_UTILIZATION"/>
            <!--
                The average IO request  moving through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_AVG_REQ_SIZE_KB"/>
            <!--
                The number of IOs moving through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_IO_PER_SEC"/>
            <!--
                The total MBs moving through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_MB_PER_SEC"/>
            <!--
                The number of gigabits moving through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_SPEED_GBITS_PER_SEC"/>
            <!--
                The utilization of port 1.
            -->
            <xs:enumeration value="PORT_1_UTILIZATION"/>
            <!--
                The number of tracks pre-fetched from disk to cache upon detection of a sequential read stream.
            -->
            <xs:enumeration value="PREFETCHED_TRACK_PER_SEC"/>
            <!--
                A data transfer of a read between the director and the cache.
            -->
            <xs:enumeration value="READS"/>
            <!--
                A data transfer of a write between the cache and the director.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                A data transfer between the director and the cache. An IO may require multiple requests depending on IO size, alignment or both. For writes the request counter increments at the time that the write pending flag is removed from the cache slot. In the event that multiple DAs are involved in the IO operation (such as RAID-1), the request count may not reconcile with the IO count and IO size.
            -->
            <xs:enumeration value="REQUEST_PER_SEC"/>
            <!--
                The total number of calls seen by this director.
            -->
            <xs:enumeration value="SYSCALL_COUNT_PER_SEC"/>
            <!--
                The number of calls sent using RDF to a remote system.
            -->
            <xs:enumeration value="SYSCALL_RDF_DIR_COUNT_PER_SEC"/>
            <!--
                The number of calls sent from the local director to another director in the same system.
            -->
            <xs:enumeration value="SYSCALL_REMOTE_DIR_COUNT_PER_SEC"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="VLUN_MIG_WRITE"/>
            <!--
                These metrics are for internal Symmetrix operations.
            -->
            <xs:enumeration value="VLUN_MIG_READ"/>
            <!--
                The number of compressed read requests per second.
            -->
            <xs:enumeration value="COMP_READS"/>
            <!--
                The number of compressed write requests per second.
            -->
            <xs:enumeration value="COMP_WRITES"/>
            <!--
                The size of compressed read MBs per second.
            -->
            <xs:enumeration value="COMP_MB_READ_PER_SEC"/>
            <!--
                The size of compressed write MBs per second.
            -->
            <xs:enumeration value="COMP_MB_WRITE_PER_SEC"/>
            <!--
                The total number of compressed requests (read and write) per second.
            -->
            <xs:enumeration value="COMP_REQUESTS"/>
            <!--
                The total size of compressed MBs (read and write) per second.
            -->
            <xs:enumeration value="COMP_MB_RATE"/>
            <!--
                The percent of all compressed requests that were read requests.
            -->
            <xs:enumeration value="PERCENT_COMP_READS"/>
            <!--
                The percent of all compressed requests that were write requests.
            -->
            <xs:enumeration value="PERCENT_COMP_WRITES"/>
            <!--
                The total percent of all read and write requests.
            -->
            <xs:enumeration value="PERCENT_COMP_REQUESTS"/>
            <!--
                The percent of all compressed MBs that were read MBs.
            -->
            <xs:enumeration value="PERCENT_COMP_MB_READ"/>
            <!--
                The percent of all compressed MBs that were write MBs.
            -->
            <xs:enumeration value="PERCENT_COMP_MB_WRITTEN"/>
            <!--
                The total percent of all compressed read and write MBs.
            -->
            <xs:enumeration value="PERCENT_COMP_MB"/>
            <!--
                The total percent of time that core 0 is busy serving IOs.
            -->
            <xs:enumeration value="PERCENT_BUSY_CORE_0"/>
            <!--
                The total percent of time that core 1 is busy serving IOs.
            -->
            <xs:enumeration value="PERCENT_BUSY_CORE_1"/>
            <!--
                The total percent of time that core 0 is idle.
            -->
            <xs:enumeration value="PERCENT_IDLE_CORE_0"/>
            <!--
                The total percent of time that core 1 is idle.
            -->
            <xs:enumeration value="PERCENT_IDLE_CORE_1"/>
            <!--
                The count of the reads passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_READ_PER_SEC"/>
            <!--
                The count of the reads passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_READ_PER_SEC"/>
            <!--
                The count of the writes passed through port 0 per second.
            -->
            <xs:enumeration value="PORT_0_WRITE_PER_SEC"/>
            <!--
                The count of the writes passed through port 1 per second.
            -->
            <xs:enumeration value="PORT_1_WRITE_PER_SEC"/>
            <!--
                The number of MBs per second on port 0 that were reads.
            -->
            <xs:enumeration value="PORT_0_MBYTES_READ_PER_SEC"/>
            <!--
                The number of MBs per second on port 1 that were reads.
            -->
            <xs:enumeration value="PORT_1_MBYTES_READ_PER_SEC"/>
            <!--
                The number of MBs per second on port 0 that were writes.
            -->
            <xs:enumeration value="PORT_0_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                The number of MBs per second on port 1 that were writes.
            -->
            <xs:enumeration value="PORT_1_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                The total percent of time that core 0 is busy serving non-IO tasks.
            -->
            <xs:enumeration value="PERCENT_NON_IO_BUSY_CORE_0"/>
            <!--
                The total percent of time that core 1 is busy serving non-IO tasks.
            -->
            <xs:enumeration value="PERCENT_NON_IO_BUSY_CORE_1"/>
            <!--
                The total percent of time that the DA is busy serving non-IO tasks.
            -->
            <xs:enumeration value="PERCENT_NON_IO_BUSY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="BEDirectorParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:directorId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:BEDirectorMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="beDirectorParam" type="tns:BEDirectorParamType"/>

    <xs:complexType name="BEDirectorResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVR_TIME_PER_SYSCALL" type="xs:float" minOccurs="0"/>
                    <xs:element name="CLONE_COPY_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="CLONE_COPY_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="COPY_ON_FIRST_ACCESS" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="OPTIMIZED_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PHCO_REBUILD_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PHCO_REBUILD_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_AVG_REQ_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_SPEED_GBITS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_AVG_REQ_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_SPEED_GBITS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACK_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="REQUEST_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_RDF_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_REMOTE_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="VLUN_MIG_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="VLUN_MIG_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_REQUESTS" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_REQUESTS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY_CORE_0" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY_CORE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_IDLE_CORE_0" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_IDLE_CORE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MBYTES_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MBYTES_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_1_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_NON_IO_BUSY_CORE_0" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_NON_IO_BUSY_CORE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_NON_IO_BUSY" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="beDirectorResult" type="tns:BEDirectorResultType"/>

    <!--
        RDFDirector Keys
    -->
    <xs:complexType name="RDFDirectorKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfDirectorKeyParam" type="tns:RDFDirectorKeyParamType"/>

    <xs:complexType name="RDFDirectorInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:directorId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfDirectorInfo" type="tns:RDFDirectorInfoType"/>

    <xs:complexType name="RDFDirectorKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:rdfDirectorInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfDirectorKeyResult" type="tns:RDFDirectorKeyResultType"/>

    <!--
        RDFDirector Metrics
    -->
    <xs:simpleType name="RDFDirectorMetric">
        <xs:restriction base="xs:string">
            <!--
                Calculated value: (MBs received per sec / reads per sec)
            -->
            <xs:enumeration value="AVG_KB_PER_IO_REC"/>
            <!--
                Calculated value: (MBs sent per sec / writes per sec)
            -->
            <xs:enumeration value="AVG_KB_PER_IO_SENT"/>
            <!--
                The average time the director takes to serve IO.
            -->
            <xs:enumeration value="AVG_IO_SERVICE_TIME"/>
            <!--
                Calculated value: (syscall time / syscall count)
            -->
            <xs:enumeration value="AVR_TIME_PER_SYSCALL"/>
            <!--
                The number of copy MBs per second via this RDF director.
            -->
            <xs:enumeration value="COPY_IO_MBYTES_PER_SEC"/>
            <!--
                The number of copy IOs per second via this RDF director.
            -->
            <xs:enumeration value="COPY_IOS_PER_SEC"/>
            <!--
                The number of compressed MBs/sec sent and received via this RDF director.
            -->
            <xs:enumeration value="COMP_MB_RATE"/>
            <!--
                The number of compressed MBs/sec received via this RDF director.
            -->
            <xs:enumeration value="COMP_MB_READ_PER_SEC"/>
            <!--
                The number of compressed MBs/sec sent via this RDF director.
            -->
            <xs:enumeration value="COMP_MB_WRITE_PER_SEC"/>
            <!--
                The average IO count per second for the director.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                The total read and write MBs on the RDF director per sec.
            -->
            <xs:enumeration value="MB_RATE"/>
            <!--
                The size of the data received in MBs for the director.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The size of the host data transfer in MBs for the director.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The number of links managed by this RDF director.
            -->
            <xs:enumeration value="NUM_LINKS"/>
            <!--
                The number of compressed links on this RDF director.
            -->
            <xs:enumeration value="NUM_COMP_LINKS"/>
            <!--
                The percent of time the directory is busy.
            -->
            <xs:enumeration value="PERCENT_BUSY"/>
            <!--
                The percent of time the directory is idle.
            -->
            <xs:enumeration value="PERCENT_IDLE"/>
            <!--
                The percent of MBs sent and received that are compressed
            -->
            <xs:enumeration value="PERCENT_COMP_MB"/>
            <!--
                The percent of MBs received from R2 that are compressed
            -->
            <xs:enumeration value="PERCENT_COMP_MB_READ"/>
            <!--
                The percent of MBs sent to R2 that are compressed
            -->
            <xs:enumeration value="PERCENT_COMP_MB_WRITTEN"/>
            <!--
                The number of Gbits per second through port 0.
            -->
            <xs:enumeration value="PORT_0_SPEED_GBITS_PER_SEC"/>
            <!--
                The utilization of port 0.
            -->
            <xs:enumeration value="PORT_0_UTILIZATION"/>
            <!--
                The read requests per second.
            -->
            <xs:enumeration value="READS"/>
            <!--
                The total read and write requests per second.
            -->
            <xs:enumeration value="REQUEST_PER_SEC"/>
            <!--
                The number of async write requests managed by this RDF director per second.
            -->
            <xs:enumeration value="SRDFA_WRITES_PER_SEC"/>
            <!--
                The number of sync write requests managed by this RDF director per second.
            -->
            <xs:enumeration value="SRDFS_WRITES_PER_SEC"/>
            <!--
                The number of async MBs sent per second via this RDF director.
            -->
            <xs:enumeration value="SRDFA_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                The number of sync MBs sent per second via this RDF director.
            -->
            <xs:enumeration value="SRDFS_MBYTES_WRITTEN_PER_SEC"/>
            <!--
                The total number of calls seen by this director.
            -->
            <xs:enumeration value="SYSCALL_COUNT_PER_SEC"/>
            <!--
                The number of calls sent via RDF to a remote system.
            -->
            <xs:enumeration value="SYSCALL_RDF_DIR_COUNT_PER_SEC"/>
            <!--
                The number of calls sent from the local director to another director in the same system.
            -->
            <xs:enumeration value="SYSCALL_REMOTE_DIR_COUNT_PER_SEC"/>
            <!--
                The time to satisfy the calls by this director.
            -->
            <xs:enumeration value="SYSCALL_TIME_PER_SEC"/>
            <!--
                The number of tracks received by this director per second.
            -->
            <xs:enumeration value="TOTAL_RDF_READS"/>
            <!--
                The number of tracks sent by this director per second.
            -->
            <xs:enumeration value="TOTAL_RDF_WRITES"/>
            <!--
                The write requests per second.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                The write misses for the RDF director per second. A miss occurs when the request has to wait for data to destage from cache to disk.
            -->
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="RDFDirectorParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:directorId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:RDFDirectorMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfDirectorParam" type="tns:RDFDirectorParamType"/>

    <xs:complexType name="RDFDirectorResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_KB_PER_IO_REC" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_KB_PER_IO_SENT" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_IO_SERVICE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVR_TIME_PER_SYSCALL" type="xs:float" minOccurs="0"/>
                    <xs:element name="COPY_IO_MBYTES_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COPY_IOS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="NUM_LINKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="NUM_COMP_LINKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_SPEED_GBITS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PORT_0_UTILIZATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="REQUEST_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SRDFA_WRITES_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SRDFS_WRITES_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SRDFA_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SRDFS_MBYTES_WRITTEN_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_RDF_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_REMOTE_DIR_COUNT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYSCALL_TIME_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_RDF_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_RDF_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfDirectorResult" type="tns:RDFDirectorResultType"/>

    <!--
        Disk Keys
    -->
    <xs:complexType name="DiskKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskKeyParam" type="tns:DiskKeyParamType"/>

    <xs:complexType name="DiskInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:diskId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskInfo" type="tns:DiskInfoType"/>

    <xs:complexType name="DiskKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:diskInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskKeyResult" type="tns:DiskKeyResultType"/>

    <!--
        Disk Metrics
    -->
    <xs:simpleType name="DiskMetric">
        <xs:restriction base="xs:string">
            <!--
                The average number of hypervolumes that the disk head crossed during one seek.
            -->
            <xs:enumeration value="AVG_HYPER_PER_SEEK"/>
            <!--
                The average number of kilobytes for a single read command.
            -->
            <xs:enumeration value="AVG_KB_PER_READ"/>
            <!--
                The a  verage number of kilobytes for a single write command.
            -->
            <xs:enumeration value="AVG_KB_PER_WRITE"/>
            <!--
                Calculated value: Accumulated queue depth/total SCSI command per sec.
            -->
            <xs:enumeration value="AVG_QUEUE_DEPTH"/>
            <!--
                The number of host read and write requests for the disk.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                The size of the IO from the host to the disk per second.
            -->
            <xs:enumeration value="MB_RATE"/>
            <!--
                The read throughput (MBs) of the disk per second.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The write throughput (MBs) of the disk per second.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of time that the disk is busy serving IOs.
            -->
            <xs:enumeration value="PERCENT_DISK_BUSY"/>
            <!--
                The percent of time the disk is idle.
            -->
            <xs:enumeration value="PERCENT_DISK_IDLE"/>
            <!--
                The percent of the disk that is free.
            -->
            <xs:enumeration value="PERCENT_FREE_CAPACITY"/>
            <!--
                The percent of the disk that is used.
            -->
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of host reads per second for the disk.
            -->
            <xs:enumeration value="READS"/>
            <!--
                The average response time for the reads and writes.
            -->
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The average time it took the disk to serve one read command.
            -->
            <xs:enumeration value="RESPONSE_TIME_READ"/>
            <!--
                The average time it took the disk to serve one write command.
            -->
            <xs:enumeration value="RESPONSE_TIME_WRITE"/>
            <!--
                The total number of read commands, write commands, skip mask commands, verify commands, XOR write commands, and XOR write-read commands performed by the Symmetrix disk each second.
            -->
            <xs:enumeration value="SCSI_COMM"/>
            <!--
                The number of hypervolumes that the disk head crossed (during all seeks) each second.
            -->
            <xs:enumeration value="SEEK_DISTANCE_PER_SEC"/>
            <!--
                The number of times each second that the disk head moved to find data.
            -->
            <xs:enumeration value="SEEKS_PER_SEC"/>
            <!--
                The skip mask support offers an emulation of the ability to efficiently transfer nearly sequential streams of data. It allows a sequential read or write to execute but skip over certain unwanted or unchanged portions of the data stream, thereby transferring only those portions of the sequential stream that have changed and need to be updated. The skip mask mechanism increases throughput by saving bandwidth; both the bandwidth of processing multiple commands and the bandwidth of transferring unnecessary data.
            -->
            <xs:enumeration value="SKIP_MASK_COMMAD_PER_SEC"/>
            <!--
                The total capacity of the disk (GBs).
            -->
            <xs:enumeration value="TOTAL_DISK_CAPACITY_GB"/>
            <!--
                The number of commands that verify the integrity of the data on the disk.
            -->
            <xs:enumeration value="VERIFY_COMMAND_PER_SEC"/>
            <!--
                The number of host writes per second for the disk.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                The number of exclusive OR (XOR) read commands performed each second by the disk. XOR commands are used to establish parity protection in RAID-S and RAID 5 configurations.
            -->
            <xs:enumeration value="XOR_READ_COMMAND_PER_SEC"/>
            <!--
                The number of exclusive OR (XOR) write commands performed each second by the disk. XOR commands are used to establish parity protection in RAID-S and RAID 5 configurations.
            -->
            <xs:enumeration value="XOR_WRITE_COMMAND_PER_SEC"/>
            <!--
                The used capacity of the disk (GBs).
            -->
            <xs:enumeration value="USED_DISK_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DiskParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:diskId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:DiskMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskParam" type="tns:DiskParamType"/>

    <xs:complexType name="DiskResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_HYPER_PER_SEEK" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_KB_PER_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_KB_PER_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_QUEUE_DEPTH" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_FREE_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="SCSI_COMM" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEEK_DISTANCE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEEKS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SKIP_MASK_COMMAD_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="VERIFY_COMMAND_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XOR_READ_COMMAND_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="XOR_WRITE_COMMAND_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskResult" type="tns:DiskResultType"/>

    <!--
        DeviceGroup Keys
    -->
    <xs:complexType name="DeviceGroupKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="deviceGroupKeyParam" type="tns:DeviceGroupKeyParamType"/>

    <xs:complexType name="DeviceGroupInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:deviceGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="deviceGroupInfo" type="tns:DeviceGroupInfoType"/>

    <xs:complexType name="DeviceGroupKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:deviceGroupInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="deviceGroupKeyResult" type="tns:DeviceGroupKeyResultType"/>

    <!--
        DeviceGroup Metrics
    -->
    <xs:simpleType name="DeviceGroupMetric">
        <xs:restriction base="xs:string">
            <!--
                The average time it takes cache to respond to a read request by the disk directors.
            -->
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a request by the disk directors to the cache.
            -->
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the read request on the queue and the DA picks it up - can be considered queue time.
            -->
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                Calculated value: (HA Kbytes transferred per sec/total IOs per sec)
            -->
            <xs:enumeration value="AVG_IO_SIZE_KB"/>
            <!--
                Calculated value: (Kbytes read per sec/total reads per sec)
            -->
            <xs:enumeration value="AVG_READ_SIZE"/>
            <!--
                Calculated value: (Kbytes written per sec/total writes per sec)
            -->
            <xs:enumeration value="AVG_WRITE_SIZE"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            -->
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                The number of MBs read per second + MBs written per second.
            -->
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            -->
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The percent of the back-end IO that were read requests.
            -->
            <xs:enumeration value="BE_PERCENT_READ"/>
            <!--
                The total prefetched tracks each second from the disk directors to the cache.
            -->
            <xs:enumeration value="BE_PERFETCHED_TRACK_PER_SEC"/>
            <!--
                The number of prefetched tracks used each second from the disk directors to the cache.
            -->
            <xs:enumeration value="BE_PERFETCHED_TRACK_USED_PER_SEC"/>
            <!--
                The percent of the back-end IO that were write requests.
            -->
            <xs:enumeration value="BE_PERCENT_WRITE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_WRITES"/>
            <!--
                Cumulative number of host MBs read/writes per second by the group.
            -->
            <xs:enumeration value="HA_MB_PER_SEC"/>
            <!--  The number of back-end requests per GB of disk.
            -->
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The number of host operations performed each second by the group.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                 The maximum number of write-pending slots available for the group.
            -->
            <xs:enumeration value="MAX_WRITE_PENDING_THRLD"/>
            <!--
                The cumulative number of host MBs read per second by the group.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The cumulative number of host MBs written per second by the group.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of IO operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                The percent of IO operations that were misses.
            -->
            <xs:enumeration value="PERCENT_MISS"/>
            <!--
                The percent of IO operations that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_IO"/>
            <!--
                The percent of all write IOs that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITES"/>
            <!--
                Calculated value: 100 * (random read hits per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_READ_HIT"/>
            <!--
                Calculated value: 100 * (random read misses per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_READ_MISS"/>
            <!--
                The percent of all read IOs that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_READS"/>
            <!--
                Calculated value: 100 * (random write hits per sec / total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITE_HIT"/>
            <!--
                Calculated value: 100 * (random write misses per sec / total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITE_MISS"/>
            <!--
                The percent of IO operations that were reads.
            -->
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                The percent of read operations, performed by the group, that were immediately satisfied by cache.
            -->
            <xs:enumeration value="PERCENT_READ_HIT"/>
            <!--
                The percent of read miss operations performed each second by the group. A miss occurs when the requested read data is not found in cache.
            -->
            <xs:enumeration value="PERCENT_READ_MISS"/>
            <!--
                The percent of the sequential read operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_SEQ_READ_HIT"/>
            <!--
                The percent of the sequential read operations that were misses.
            -->
            <xs:enumeration value="PERCENT_SEQ_READ_MISS"/>
            <!--
                Calculated value: 100 * (seq reads per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_SEQ_READS"/>
            <!--
                The percent of the sequential write operations that were misses.
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITE_MISS"/>
            <!--
                The percent of the sequential write operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITE_HIT"/>
            <!--
                Calculated value: 100*(seq writes per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITES"/>
            <!--
                The percent of IO operations that were writes.
            -->
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                The percent of write operations, performed by the group, that were immediately satisfied by cache.
            -->
            <xs:enumeration value="PERCENT_WRITE_HIT"/>
            <!--
                The percent of write miss operations performed each second by the group. A miss occurs when the write operation had to wait while data was destaged from cache to the disks.
            -->
            <xs:enumeration value="PERCENT_WRITE_MISS"/>
            <!--
                The number of MBs prefetched from disk to cache in a second.
            -->
            <xs:enumeration value="PREFETCHED_TRACK_MB_PER_SEC"/>
            <!--
                The number of IOs from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_IO_PER_SEC"/>
            <!--
                The number of random read IOs that were satisfied from the cache.
            -->
            <xs:enumeration value="RANDOM_READ_HIT_PER_SEC"/>
            <!--
                The number of random read IOs that were misses.
            -->
            <xs:enumeration value="RANDOM_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO commands from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_READ_PER_SEC"/>
            <!--
                The number of random write IOs that were immediately placed in cache because space was available.
            -->
            <xs:enumeration value="RANDOM_WRITE_HIT_PER_SEC"/>
            <!--
                The number of random write IOs that were misses.
            -->
            <xs:enumeration value="RANDOM_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO commands from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_WRITE_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group that were not satisfied from cache.
            -->
            <xs:enumeration value="READ_MISS_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group.
            -->
            <xs:enumeration value="READS"/>
            <!--
                The average time it takes to satisfy IO requests.
            -->
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read miss IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_READ_MISS_TIME"/>
            <!--
                A summary of the read, write, and average response times for the selected SRDF/S group.
            -->
            <xs:enumeration value="SAMPLED_AVG_RDF_WRITE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_READ_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write miss IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_WP_DISCONNECT_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_WRITE_TIME"/>
            <!--
                The number of sequential read operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="SEQ_READ_HIT_PER_SEC"/>
            <!--
                The number of sequential read operations performed each second by the group that were misses.
            -->
            <xs:enumeration value="SEQ_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="SEQ_READ_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="SEQ_WRITE_HIT_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were misses.
            -->
            <xs:enumeration value="SEQ_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="SEQ_WRITE_PER_SEC"/>
            <!--
                The number of host write operations performed each second by the group that were not satisfied from cache.
            -->
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
            <!--
                The number of host write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="WRITE_HIT_PER_SEC"/>
            <!--
                The number of host read/write operations performed each second by the group that could not be satisfied from cache.
            -->
            <xs:enumeration value="TOTAL_MISS_PER_SEC"/>
            <!--
                The number of host read/write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="TOTAL_HIT_PER_SEC"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The number of IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="TOTAL_SEQ_IO_PER_SEC"/>
            <!--
                The number of tracks currently in write pending mode for the group
            -->
            <xs:enumeration value="WP"/>
            <!--
                The number of host write operations performed each second by the group.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                The number of reads per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of writes per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_IOS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            -->
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of reads/writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number  of reads per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number  of writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to front end directors serving their IOs.
            -->
            <xs:enumeration value="FE_WORKLOAD_SCORE"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to back end directors serving their IOs.
            -->
            <xs:enumeration value="BE_WORKLOAD_SCORE"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to disks serving their IOs.
            -->
            <xs:enumeration value="DISK_WORKLOAD_SCORE"/>
            <!--
                A combined score metric that reflects the overall contribution of a volume or list of volumes to the array.
            -->
            <xs:enumeration value="WORKLOAD_SCORE"/>
            <!--
                The total delay in milliseconds that the RDF directors impose on RDF devices in order to better serve remote IOs.
            -->
            <xs:enumeration value="WRITE_PACED_DELAY"/>
            <!--
                The average time in milliseconds that host writes on RDF devices are delayed by the RDF directors.
            -->
            <xs:enumeration value="AVG_WRITE_PACED_DELAY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DeviceGroupParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:deviceGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:DeviceGroupMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="deviceGroupParam" type="tns:DeviceGroupParamType"/>

    <xs:complexType name="DeviceGroupResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_IO_SIZE_KB" type="xs:float" minOccurs="0"/>  
                    <xs:element name="AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_READ" type="xs:float" minOccurs="0"/>  
                    <xs:element name="BE_PERFETCHED_TRACK_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERFETCHED_TRACK_USED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/> 
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>             
                    <xs:element name="HA_MB_PER_SEC" type="xs:float" minOccurs="0"/> 
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/> 
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>      
                    <xs:element name="MAX_WRITE_PENDING_THRLD" type="xs:float" minOccurs="0"/>  
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>   
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>   
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>     
                    <xs:element name="PERCENT_MISS" type="xs:float" minOccurs="0"/>         
                    <xs:element name="PERCENT_RANDOM_IO" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READS" type="xs:float" minOccurs="0"/> 
                    <xs:element name="PERCENT_RANDOM_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/> 
                    <xs:element name="PERCENT_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_MISS" type="xs:float" minOccurs="0"/> 
                    <xs:element name="PERCENT_SEQ_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READ_MISS" type="xs:float" minOccurs="0"/>     
                    <xs:element name="PERCENT_SEQ_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITE_MISS" type="xs:float" minOccurs="0"/> 
                    <xs:element name="PERCENT_SEQ_WRITE_HIT" type="xs:float" minOccurs="0"/> 
                    <xs:element name="PERCENT_SEQ_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_MISS" type="xs:float" minOccurs="0"/>          
                    <xs:element name="PREFETCHED_TRACK_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_MISS_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_RDF_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WP_DISCONNECT_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_SEQ_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>   
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="FE_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="DISK_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="deviceGroupResult" type="tns:DeviceGroupResultType"/>

    <!--
        StorageGroup Keys
    -->
    <xs:complexType name="StorageGroupKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupKeyParam" type="tns:StorageGroupKeyParamType"/>

    <xs:complexType name="StorageGroupInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:storageGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupInfo" type="tns:StorageGroupInfoType"/>

    <xs:complexType name="StorageGroupKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:storageGroupInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupKeyResult" type="tns:StorageGroupKeyResultType"/>

    <!--
        StorageGroup Metrics
    -->
    <xs:simpleType name="StorageGroupMetric">
        <xs:restriction base="xs:string">
            <!--
            The total number of allocated tracks.
            --> 
            <xs:enumeration value="ALLOCATED_TRACKS"/> 
            <!--
                The average time it takes cache to respond to a read request by the disk directors.
            --> 
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a request by the disk directors to the cache.
            --> 
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the read request on the queue and the DA picks it up; this can be considered queue time.
            --> 
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                Calculated value: (HA Kbytes transferred per sec / total IOs per sec) 
            --> 
            <xs:enumeration value="AVG_IO_SIZE_KB"/>
            <!--
                Calculated value: (Kbytes read per sec/total reads per sec) 
            --> 
            <xs:enumeration value="AVG_READ_SIZE"/>
            <!--
                Calculated value: (Kbytes written per sec/total writes per sec) 
            --> 
            <xs:enumeration value="AVG_WRITE_SIZE"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            --> 
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                The number of MBs read per second + MBs written per second.
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            --> 
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The percent of the back-end IO that were read requests.
            --> 
            <xs:enumeration value="BE_PERCENT_READ"/>
            <!--
                The total prefetched tracks each second from the disk directors to the cache.
            --> 
            <xs:enumeration value="BE_PERFETCHED_TRACK_PER_SEC"/>
            <!--
                The number of prefetched tracks used each second from the disk directors to the cache.
            --> 
            <xs:enumeration value="BE_PERFETCHED_TRACK_USED_PER_SEC"/>
            <!--
                The percent of the back-end IO that were write requests.
            --> 
            <xs:enumeration value="BE_PERCENT_WRITE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The number of KBs per second for DA RDF copy.
            -->
            <xs:enumeration value="DA_BLKS_RDF_COPY"/>
            <!--
               The number of KBs per second for DA reads for copy.
            -->
            <xs:enumeration value="DA_BLKS_READ_FOR_COPY"/>
            <!--
               The number of KBs per second for DA reads for vlun migration.
            -->
            <xs:enumeration value="DA_BLKS_READ_FOR_VLUN_MIGRATION"/>
            <!--
               The number of KBs per second for DA writes for copy.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_COPY"/>
            <!--
               The number of KBs per second for DA writes for rebuild.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_REBUILD"/>
            <!--
               The number of KBs per second for DA writes for vlun migration.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_VLUN__MIGRATION"/>
            <!--
               The number of KBs per second for DA optimize writes.
            -->
            <xs:enumeration value="DA_OPTIMIZE_WRITE_BLKS"/>
            <!--
               The number of KBs per second for DA partial sector writes.
            -->
            <xs:enumeration value="DA_PARTIAL_SECTOR_WRITE_BLKS"/>
            <!--
               The number of DA RDF copies per second.
            -->
            <xs:enumeration value="DA_RDF_COPY"/>
            <!--
               The number of DA reads for copy per second.
            -->
            <xs:enumeration value="DA_READ_FOR_COPY"/>
            <!--
               The number of DA reads for vlun migration per second.
            -->
            <xs:enumeration value="DA_READS_FOR_VLUN_MIGRATION"/>
            <!--
               The number of DA writes for copy per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_COPY"/>
            <!--
               The number of DA writes for rebuild per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_REBUILD"/>
            <!--
               The number of DA writes for vlun migration per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_VLUN_MIGRATION"/>
            <!--
               The number of KBs per second for DA XOR reads.
            -->
            <xs:enumeration value="DA_XOR_BLKS_READ"/>
            <!--
               The number of DA XOR reads per second.
            -->
            <xs:enumeration value="DA_XOR_READS"/>
            <!--
               The block size in KBs of the devices in this group.
            -->
            <xs:enumeration value="DEVICE_BLOCK_SIZE"/>
            <!--
                The capacity in GBs of this group.
             -->
             <xs:enumeration value="DEVICE_CAPACITY"/>
            <!--
                The cumulative number of host MBs read/writes per second by the group.
            --> 
            <xs:enumeration value="HA_MB_PER_SEC"/>
            <!--
                The number of backend reads and writes per GB of disk. 
            --> 
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The host operations performed each second by the group.
            --> 
            <xs:enumeration value="IO_RATE"/>
            <!--
                The maximum number of write-pending slots available for the group.
            --> 
            <xs:enumeration value="MAX_WRITE_PENDING_THRLD"/>
            <!--
                The cumulative number of host MBs read per second by the group.
            --> 
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The cumulative number of host MBs written per second by the group.
            --> 
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of IO operations that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                The percent of IO operations that were misses.
            --> 
            <xs:enumeration value="PERCENT_MISS"/>
            <!--
                The percent of IO operations that were random.
            --> 
            <xs:enumeration value="PERCENT_RANDOM_IO"/>
            <!--
                The percent of all write IOs that were random.
            --> 
            <xs:enumeration value="PERCENT_RANDOM_WRITES"/>
            <!--
                Calculated value: (100 * (random read hits per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_RANDOM_READ_HIT"/>
            <!--
                Calculated value: (100 * (random read misses per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_RANDOM_READ_MISS"/>
            <!--
                The percent of all read IOs that were random.
            --> 
            <xs:enumeration value="PERCENT_RANDOM_READS"/>
            <!--
                Calculated value: (100 * (random write hits per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_RANDOM_WRITE_HIT"/>
            <!--
                Calculated value: (100 * (random write misses per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_RANDOM_WRITE_MISS"/>
            <!--
                The percent of IO operations that were reads.
            --> 
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                The percent of read operations, performed by the group, that were immediately satisfied by cache.
            --> 
            <xs:enumeration value="PERCENT_READ_HIT"/>
            <!--
                The percent of read miss operations performed each second by the group. A miss occurs when the requested read data is not found in cache.
            --> 
            <xs:enumeration value="PERCENT_READ_MISS"/>
            <!--
                The percent of the sequential read operations that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="PERCENT_SEQ_READ_HIT"/>
            <!--
                The percent of the sequential read operations that were misses.
            --> 
            <xs:enumeration value="PERCENT_SEQ_READ_MISS"/>
            <!--
                Calculated value: (100 * (seq reads per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_SEQ_READS"/>
            <!--
                The percent of the sequential write operations that were misses
            --> 
            <xs:enumeration value="PERCENT_SEQ_WRITE_MISS"/>
            <!--
                The percent of the sequential write operations that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="PERCENT_SEQ_WRITE_HIT"/>
            <!--
                Calculated value: (100*(seq writes per sec / total IOs per sec)) 
            --> 
            <xs:enumeration value="PERCENT_SEQ_WRITES"/>
            <!--
                The percent of IO operations that were writes.
            --> 
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                The percent of write operations, performed by the group, that were immediately satisfied by cache.
            --> 
            <xs:enumeration value="PERCENT_WRITE_HIT"/>
            <!--
                The percent of write miss operations performed each second by the group. A miss occurs when the write operation had to wait while data was destaged from cache to the disks.
            --> 
            <xs:enumeration value="PERCENT_WRITE_MISS"/>
            <!--
                The number of MBs prefetched from disk to cache in a second.
            --> 
            <xs:enumeration value="PREFETCHED_TRACK_MB_PER_SEC"/>
            <!--
                The number of IOs from a host not identified as part of a sequential stream.
            --> 
            <xs:enumeration value="RANDOM_IO_PER_SEC"/>
            <!--
                The number of random read IOs that were satisfied from the cache.
            --> 
            <xs:enumeration value="RANDOM_READ_HIT_PER_SEC"/>
            <!--
                The number of random read IOs that were misses.
            --> 
            <xs:enumeration value="RANDOM_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO commands from a host not identified as part of a sequential stream.
            --> 
            <xs:enumeration value="RANDOM_READ_PER_SEC"/>
            <!--
                The number of random write IOs that were immediately placed in cache because space was available.
            --> 
            <xs:enumeration value="RANDOM_WRITE_HIT_PER_SEC"/>
            <!--
                The number of random write IOs that were misses.
            --> 
            <xs:enumeration value="RANDOM_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO commands from a host not identified as part of a sequential stream.
            --> 
            <xs:enumeration value="RANDOM_WRITE_PER_SEC"/>
            <!--
                The host read operations performed each second by the group that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                The host read operations performed each second by the group that were not satisfied from cache.
            --> 
            <xs:enumeration value="READ_MISS_PER_SEC"/>
            <!--
                The host read operations performed each second by the group.
            --> 
            <xs:enumeration value="READS"/>
            <!--
                The average time that it took the Symmetrix to serve one read miss IO for this group.
            --> 
            <xs:enumeration value="SAMPLED_AVG_READ_MISS_TIME"/>
            <!--
                The summary of the read, write, and average response times for the selected SRDF/S group.
            --> 
            <xs:enumeration value="SAMPLED_AVG_RDF_WRITE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read IO for this group.
            --> 
            <xs:enumeration value="SAMPLED_AVG_READ_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write miss IO for this group.
            --> 
            <xs:enumeration value="SAMPLED_AVG_WP_DISCONNECT_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write IO for this group.
            --> 
            <xs:enumeration value="SAMPLED_AVG_WRITE_TIME"/>
            <!--
                The number of sequential read operations performed each second by the group that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="SEQ_READ_HIT_PER_SEC"/>
            <!--
                The number of sequential read operations performed each second by the group that were misses.
            --> 
            <xs:enumeration value="SEQ_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO operations performed each second that were sequential.
            --> 
            <xs:enumeration value="SEQ_READ_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="SEQ_WRITE_HIT_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were misses.
            --> 
            <xs:enumeration value="SEQ_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO operations performed each second that were sequential.
            --> 
            <xs:enumeration value="SEQ_WRITE_PER_SEC"/>
            <!--
                The host write operations performed each second by the group that were not satisfied from cache.
            --> 
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
            <!--
                The host write operations performed each second by the group that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="WRITE_HIT_PER_SEC"/>
            <!--
                The host write operations performed each second by the group that were not satisfied from cache.
            --> 
            <xs:enumeration value="TOTAL_MISS_PER_SEC"/>
            <!--
                The host read/write operations performed each second by the group that were immediately satisfied from cache.
            --> 
            <xs:enumeration value="TOTAL_HIT_PER_SEC"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The number of IO operations performed each second that were sequential.
            --> 
            <xs:enumeration value="TOTAL_SEQ_IO_PER_SEC"/>
            <!--
                The  host write operations performed each second by the group.
            --> 
            <xs:enumeration value="WRITES"/>
            <!--
                The number of tracks currently in write pending mode for the group.
            --> 
            <xs:enumeration value="WP"/>
            <!--
                The percent of sequential IO.
            --> 
            <xs:enumeration value="PERCENT_SEQ_IO"/>
            <!--
                The total number of tracks that are compressed.
            --> 
            <xs:enumeration value="COMPRESSED_TRACKS"/>
            <!--
                The percent of tracks that are compressed.
            --> 
            <xs:enumeration value="PERCENT_COMPRESSED_TRACKS"/>
            <!--
                The number of reads per second that found in the XtremSW Cache.
            --> 
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of writes per second that found in the XtremSW Cache.
            --> 
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            --> 
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache
            --> 
            <xs:enumeration value="XC_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache.
            --> 
            <xs:enumeration value="XC_IOS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            --> 
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of reads/writes per second that has been found in the XtremSW Cache de-dup cache.
            --> 
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number  of reads per second that has been found in the XtremSW Cache de-dup cache.
            --> 
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number  of writes per second that has been found in the XtremSW Cache de-dup cache.
            --> 
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            --> 
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            --> 
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            --> 
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
            <!--
                The average time in milliseconds that IOs are delayed because IO quota limits. 
            --> 
            <xs:enumeration value="QUOTA_AVG_DELAYED_TIME"/>
            <!--
                The number of IOs per seconds performed by this storage group that are delayed by the director due to IO quota limits.
            --> 
            <xs:enumeration value="QUOTA_DELAYED_IOS"/>
            <!--
                The time in milliseconds that IOs are delayed because IO quota limits.
            --> 
            <xs:enumeration value="QUOTA_DELAYED_TIME"/>
            <!--
                The percent of IOs delayed due to quota limits.
            --> 
            <xs:enumeration value="QUOTA_PERCENT_DELAYED_IOS"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to front end directors serving their IOs.
            -->
            <xs:enumeration value="FE_WORKLOAD_SCORE"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to back end directors serving their IOs.
            -->
            <xs:enumeration value="BE_WORKLOAD_SCORE"/>
            <!--
                A score metric that reflects the contribution of a volume or list of volumes to disks serving their IOs.
            -->
            <xs:enumeration value="DISK_WORKLOAD_SCORE"/>
            <!--
                A combined score metric that reflects the overall contribution of a volume or list of volumes to the array.
            -->
            <xs:enumeration value="WORKLOAD_SCORE"/>
            <!--
                The average time it takes to satisfy IO requests.
            -->
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The total delay in milliseconds that the RDF directors impose on RDF devices in order to better serve remote IOs.
            -->
            <xs:enumeration value="WRITE_PACED_DELAY"/>
            <!--
                The average time in milliseconds that host writes on RDF devices are delayed by the RDF directors.
            -->
            <xs:enumeration value="AVG_WRITE_PACED_DELAY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="StorageGroupParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:storageGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:StorageGroupMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupParam" type="tns:StorageGroupParamType"/>

    <xs:complexType name="StorageGroupResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_IO_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERFETCHED_TRACK_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERFETCHED_TRACK_USED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_RDF_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_READ_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_READ_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_REBUILD" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_VLUN__MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_OPTIMIZE_WRITE_BLKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_PARTIAL_SECTOR_WRITE_BLKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_RDF_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_READ_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_READS_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_REBUILD" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_XOR_BLKS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_XOR_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEVICE_BLOCK_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEVICE_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="HA_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MAX_WRITE_PENDING_THRLD" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_IO" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACK_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_MISS_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_RDF_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WP_DISCONNECT_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_SEQ_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_IO" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_AVG_DELAYED_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_DELAYED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_DELAYED_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="QUOTA_PERCENT_DELAYED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="FE_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="DISK_WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="WORKLOAD_SCORE" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupResult" type="tns:StorageGroupResultType"/>

    <!--
        RDFS Keys
    -->
    <xs:complexType name="RDFSKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfsKeyParam" type="tns:RDFSKeyParamType"/>

    <xs:complexType name="RDFSInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:raGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfsInfo" type="tns:RDFSInfoType"/>

    <xs:complexType name="RDFSKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:rdfsInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfsKeyResult" type="tns:RDFSKeyResultType"/>

    <!--
        RDFS Metrics
    -->
    <xs:simpleType name="RDFSMetric">   
            <xs:restriction base="xs:string">
            <!--
                The average time it takes cache to respond to a read request by the disk directors.
            -->
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a request by the disk directors to the cache.
            -->
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the read request on the queue and the DA picks it up - can be considered queue time.
            -->
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                Calculated value: (HA Kbytes transferred per sec/total IOs per sec)
            -->
            <xs:enumeration value="AVG_IO_SIZE_KB"/>
            <!--
                Calculated value: (Kbytes read per sec/total reads per sec)
            -->
            <xs:enumeration value="AVG_READ_SIZE"/>
            <!--
                Calculated value: (Kbytes written per sec/total writes per sec)
            -->
            <xs:enumeration value="AVG_WRITE_SIZE"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            -->
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                The number of MBs read per second + MBs written per second.
            -->
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            -->
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The percent of the back-end IO that were read requests.
            -->
            <xs:enumeration value="BE_PERCENT_READ"/>
            <!--
                The total prefetched tracks each second from the disk directors to the cache.
            -->
            <xs:enumeration value="BE_PERFETCHED_TRACK_PER_SEC"/>
            <!--
                The number of prefetched tracks used each second from the disk directors to the cache.
            -->
            <xs:enumeration value="BE_PERFETCHED_TRACK_USED_PER_SEC"/>
            <!--
                The percent of the back-end IO that were write requests.
            -->
            <xs:enumeration value="BE_PERCENT_WRITE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The number of KBs per second for DA RDF copy.
            -->
            <xs:enumeration value="DA_BLKS_RDF_COPY"/>
            <!--
               The number of KBs per second for DA reads for copy.
            -->
            <xs:enumeration value="DA_BLKS_READ_FOR_COPY"/>
            <!--
               The number of KBs per second for DA reads for vlun migration.
            -->
            <xs:enumeration value="DA_BLKS_READ_FOR_VLUN_MIGRATION"/>
            <!--
               The number of KBs per second for DA writes for copy.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_COPY"/>
            <!--
               The number of KBs per second for DA writes for rebuild.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_REBUILD"/>
            <!--
               The number of KBs per second for DA writes for vlun migration.
            -->
            <xs:enumeration value="DA_BLKS_WRITTEN_FOR_VLUN__MIGRATION"/>
            <!--
               The number of KBs per second for DA optimize writes.
            -->
            <xs:enumeration value="DA_OPTIMIZE_WRITE_BLKS"/>
            <!--
               The number of KBs per second for DA partial sector writes.
            -->
            <xs:enumeration value="DA_PARTIAL_SECTOR_WRITE_BLKS"/>
            <!--
               The number of DA RDF copies per second.
            -->
            <xs:enumeration value="DA_RDF_COPY"/>
            <!--
               The number of DA reads for copy per second.
            -->
            <xs:enumeration value="DA_READ_FOR_COPY"/>
            <!--
               The number of DA reads for vlun migration per second.
            -->
            <xs:enumeration value="DA_READS_FOR_VLUN_MIGRATION"/>
            <!--
               The number of DA writes for copy per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_COPY"/>
            <!--
               The number of DA writes for rebuild per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_REBUILD"/>
            <!--
               The number of DA writes for vlun migration per second.
            -->
            <xs:enumeration value="DA_WRITES_FOR_VLUN_MIGRATION"/>
            <!--
               The number of KBs per second for DA XOR reads.
            -->
            <xs:enumeration value="DA_XOR_BLKS_READ"/>
            <!--
               The number of DA XOR reads per second.
            -->
            <xs:enumeration value="DA_XOR_READS"/>
            <!--
               The block size in KBs of the devices in this group.
            -->
            <xs:enumeration value="DEVICE_BLOCK_SIZE"/>
            <!--
                The capacity in GBs of this group.
            -->
            <xs:enumeration value="DEVICE_CAPACITY"/>
            <!--
                Cumulative number of host MBs read/writes per second by the group.
            -->
            <xs:enumeration value="HA_MB_PER_SEC"/>
            <!--  The number of back-end requests per GB of disk.
            -->
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The number of host operations performed each second by the group.
            -->
            <xs:enumeration value="IO_RATE"/>
            <!--
                 The maximum number of write-pending slots available for the group.
            -->
            <xs:enumeration value="MAX_WRITE_PENDING_THRLD"/>
            <!--
                The cumulative number of host MBs read per second by the group.
            -->
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The cumulative number of host MBs written per second by the group.
            -->
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of IO operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                The percent of IO operations that were misses.
            -->
            <xs:enumeration value="PERCENT_MISS"/>
            <!--
                The percent of IO operations that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_IO"/>
            <!--
                The percent of all write IOs that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITES"/>
            <!--
                Calculated value: 100 * (random read hits per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_READ_HIT"/>
            <!--
                Calculated value: 100 * (random read misses per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_READ_MISS"/>
            <!--
                The percent of all read IOs that were random.
            -->
            <xs:enumeration value="PERCENT_RANDOM_READS"/>
            <!--
                Calculated value: 100 * (random write hits per sec / total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITE_HIT"/>
            <!--
                Calculated value: 100 * (random write misses per sec / total ios per sec)
            -->
            <xs:enumeration value="PERCENT_RANDOM_WRITE_MISS"/>
            <!--
                The percent of IO operations that were reads.
            -->
            <xs:enumeration value="PERCENT_READ"/>
            <!--
                The percent of read operations, performed by the group, that were immediately satisfied by cache.
            -->
            <xs:enumeration value="PERCENT_READ_HIT"/>
            <!--
                The percent of read miss operations performed each second by the group. A miss occurs when the requested read data is not found in cache.
            -->
            <xs:enumeration value="PERCENT_READ_MISS"/>
            <!--
                The percent of the sequential read operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_SEQ_READ_HIT"/>
            <!--
                The percent of the sequential read operations that were misses.
            -->
            <xs:enumeration value="PERCENT_SEQ_READ_MISS"/>
            <!--
                Calculated value: 100 * (seq reads per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_SEQ_READS"/>
            <!--
                The percent of the sequential write operations that were misses.
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITE_MISS"/>
            <!--
                The percent of the sequential write operations that were immediately satisfied from cache.
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITE_HIT"/>
            <!--
                Calculated value: 100*(seq writes per sec/total ios per sec)
            -->
            <xs:enumeration value="PERCENT_SEQ_WRITES"/>
            <!--
                The percent of IO operations that were writes.
            -->
            <xs:enumeration value="PERCENT_WRITE"/>
            <!--
                The percent of write operations, performed by the group, that were immediately satisfied by cache.
            -->
            <xs:enumeration value="PERCENT_WRITE_HIT"/>
            <!--
                The percent of write miss operations performed each second by the group. A miss occurs when the write operation had to wait while data was destaged from cache to the disks.
            -->
            <xs:enumeration value="PERCENT_WRITE_MISS"/>
            <!--
                The number of MBs prefetched from disk to cache in a second.
            -->
            <xs:enumeration value="PREFETCHED_TRACK_MB_PER_SEC"/>
            <!--
                The number of IOs from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_IO_PER_SEC"/>
            <!--
                The number of random read IOs that were satisfied from the cache.
            -->
            <xs:enumeration value="RANDOM_READ_HIT_PER_SEC"/>
            <!--
                The number of random read IOs that were misses.
            -->
            <xs:enumeration value="RANDOM_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO commands from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_READ_PER_SEC"/>
            <!--
                The number of random write IOs that were immediately placed in cache because space was available.
            -->
            <xs:enumeration value="RANDOM_WRITE_HIT_PER_SEC"/>
            <!--
                The number of random write IOs that were misses.
            -->
            <xs:enumeration value="RANDOM_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO commands from a host not identified as part of a sequential stream.
            -->
            <xs:enumeration value="RANDOM_WRITE_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group that were not satisfied from cache.
            -->
            <xs:enumeration value="READ_MISS_PER_SEC"/>
            <!--
                The number of host read operations performed each second by the group.
            -->
            <xs:enumeration value="READS"/>
            <!--
                The average time it takes to satisfy IO requests.
            -->
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read miss IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_READ_MISS_TIME"/>
            <!--
                A summary of the read, write, and average response times for the selected SRDF/S group.
            -->
            <xs:enumeration value="SAMPLED_AVG_RDF_WRITE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_READ_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write miss IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_WP_DISCONNECT_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write IO for this group.
            -->
            <xs:enumeration value="SAMPLED_AVG_WRITE_TIME"/>
            <!--
                The number of sequential read operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="SEQ_READ_HIT_PER_SEC"/>
            <!--
                The number of sequential read operations performed each second by the group that were misses.
            -->
            <xs:enumeration value="SEQ_READ_MISS_PER_SEC"/>
            <!--
                The number of read IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="SEQ_READ_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="SEQ_WRITE_HIT_PER_SEC"/>
            <!--
                The number of sequential write operations performed each second by the group that were misses.
            -->
            <xs:enumeration value="SEQ_WRITE_MISS_PER_SEC"/>
            <!--
                The number of write IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="SEQ_WRITE_PER_SEC"/>
            <!--
                The number of host write operations performed each second by the group that were not satisfied from cache.
            -->
            <xs:enumeration value="WRITE_MISS_PER_SEC"/>
            <!--
                The number of host write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="WRITE_HIT_PER_SEC"/>
            <!--
                The number of host read/write operations performed each second by the group that could not be satisfied from cache.
            -->
            <xs:enumeration value="TOTAL_MISS_PER_SEC"/>
            <!--
                The number of host read/write operations performed each second by the group that were immediately satisfied from cache.
            -->
            <xs:enumeration value="TOTAL_HIT_PER_SEC"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The number of IO operations performed each second that were sequential.
            -->
            <xs:enumeration value="TOTAL_SEQ_IO_PER_SEC"/>
            <!--
                The number of tracks currently in write pending mode for the group
            -->
            <xs:enumeration value="WP"/>
            <!--
                The number of host write operations performed each second by the group.
            -->
            <xs:enumeration value="WRITES"/>
            <!--
                The number of reads per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of writes per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_IOS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            -->
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of reads/writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number  of reads per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number  of writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
            <!--
                The total delay in milliseconds that the RDF directors impose on RDF devices in order to better serve remote IOs.
            -->
            <xs:enumeration value="WRITE_PACED_DELAY"/>
            <!--
                The average time in milliseconds that host writes on RDF devices are delayed by the RDF directors.
            -->
            <xs:enumeration value="AVG_WRITE_PACED_DELAY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="RDFSParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:raGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:RDFSMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfsParam" type="tns:RDFSParamType"/>

    <xs:complexType name="RDFSResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_IO_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERFETCHED_TRACK_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERFETCHED_TRACK_USED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_RDF_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_READ_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_READ_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_REBUILD" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_BLKS_WRITTEN_FOR_VLUN__MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_OPTIMIZE_WRITE_BLKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_PARTIAL_SECTOR_WRITE_BLKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_RDF_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_READ_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_READS_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_COPY" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_REBUILD" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_WRITES_FOR_VLUN_MIGRATION" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_XOR_BLKS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="DA_XOR_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEVICE_BLOCK_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="DEVICE_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="HA_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MAX_WRITE_PENDING_THRLD" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_IO" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_RANDOM_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READ_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READ_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_SEQ_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_WRITE_MISS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACK_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RANDOM_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_MISS_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_RDF_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WP_DISCONNECT_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="SEQ_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_MISS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_SEQ_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_WRITE_PACED_DELAY" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfsResult" type="tns:RDFSResultType"/>

    <!--
        RDFA Keys
    -->
    <xs:complexType name="RDFAKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfaKeyParam" type="tns:RDFAKeyParamType"/>

    <xs:complexType name="RDFAInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:raGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfaInfo" type="tns:RDFAInfoType"/>

    <xs:complexType name="RDFAKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:rdfaInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfaKeyResult" type="tns:RDFAKeyResultType"/>

    <!--
       RDFA metrics
    -->
    <xs:simpleType name="RDFAMetric">
        <xs:restriction base="xs:string">
            <!--
                The count of cache slots that measures the amount of data captured (on the R1 side) or received (on the R2 side).
            --> 
            <xs:enumeration value="ACTIVE_CYCLE_SIZE"/>
            <!--
                The average size of all the cycles in RDFA sessions.
            --> 
            <xs:enumeration value="AVG_CYCLE_SIZE"/>
            <!--
                The mean time (in secs) of the last 16 cycles. (Calculated as true averages- e.g. if only 8 cycles have occurred, the average represents those 8 cycles only.)
            --> 
            <xs:enumeration value="AVG_CYCLE_TIME"/>
            <!--
                The average time it took to satisfy reads and writes.
            --> 
            <xs:enumeration value="AVG_IO_SERVICE_TIME"/>
            <!--
                The number of compressed MBs/sec received by this RDF/A group.
            --> 
            <xs:enumeration value="COMP_MB_READ_PER_SEC"/>
            <!--
                The percent of compressed MBs/sec sent by this RDF/A group.
            --> 
            <xs:enumeration value="COMP_MB_WRITE_PER_SEC"/>
            <!--
                The number of compressed MBs sent and received by this RDF/A group.
            --> 
            <xs:enumeration value="COMP_MB_RATE"/>
            <!--
                Specifies whether consistency protection is set. 
            --> 
            <xs:enumeration value="CONSISTENCY_PROTECTION"/>
            <!--
                The active cycle number identifier for the given SRDF/A session. In a regular case, the cycles switch every ~30 seconds, however, in most cases the collection interval is in minutes. Calculating the difference in cycle numbers between collection intervals relative to the minimum cycle time will show how many cycles occurred over the last interval.
            --> 
            <xs:enumeration value="CYCLE_NUM"/>
            <!--
                The percent of write pendings before DSE activates.
            --> 
            <xs:enumeration value="DSE_THRESHOLD"/>
            <!--
                The active cycle spilled count plus the inactive cycle spilled count.
            --> 
            <xs:enumeration value="DSE_USED_TRACKS"/>
            <!--
                The cycle time (in secs) of the most recently completed cycle. It should be noted that in a regular case the cycles switch every ~30 sec, however, in most cases the collection interval is in minutes, which means some cycle times will be skipped. This an important counter to look at to figure out if SRDF/A is working as expected.
            --> 
            <xs:enumeration value="DURATION_LAST_CYCLE"/>
            <!--
                The greatest number of cache slots transmitted (on the R1 side) or applied (on the R2 side) in any cycle so far in the session.
            --> 
            <xs:enumeration value="HIGHT_WATER_MARK"/>
            <!--
                The number of write IOs/sec coming in from the hosts for the volumes in this session.
            --> 
            <xs:enumeration value="HOST_WRITE_IOS_PER_SEC"/>
            <!--
                The throughput in MB/sec of writes coming in from the hosts for the volumes in this session.
            --> 
            <xs:enumeration value="HOST_WRITE_MB_PER_SEC"/>
            <!--
                The count of cache slots that measures the amount of data transmitted (on the R1 side) or applied (on the R2 side).
            --> 
            <xs:enumeration value="INACTIVE_CYCLE_SIZE"/>
            <!--
                The ratio of system write pending count to the maximum write pending slots. This is the percent of cache used by this RDF/A group.
            --> 
            <xs:enumeration value="LOCAL_CACHE_USAGE"/>
            <!--
                The number of write pending slots waiting to be de-staged to disk. On the R1 - should be less than or equal to the system write pending count.
            --> 
            <xs:enumeration value="LOCAL_WP"/>
            <!--
                The setting for the maximum number of seconds for a cycle.
            --> 
            <xs:enumeration value="MAX_CYCLE_TIME"/>
            <!--
                The number of MBs written per second for the SRDF/A session.
            --> 
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The amount of data read from the R2 in MBs+G5.
            --> 
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The setting for the minimum number of seconds for a cycle.
            --> 
            <xs:enumeration value="MIN_CYCLE"/>
            <!--
                The number of compressed links used by this RDF/A group.
            --> 
            <xs:enumeration value="NUM_COMP_LINKS"/>
            <!--
                The number of Symmetrix volumes defined in this session.
            --> 
            <xs:enumeration value="NUM_DEV_IN_SESSION"/>
            <!--
                The number of links used by this RDF/A group.
            --> 
            <xs:enumeration value="NUM_LINKS"/>
            <!--
                The ratio of system write pending count to the maximum write pending slots. This is the percent of cache used by this RDF/A group.
            --> 
            <xs:enumeration value="REMOTE_CACHE_USAGE"/>
            <!--
                Calculated value: ((Compressed MBs Received/sec /MBs Received/sec) * 100) 
            --> 
            <xs:enumeration value="PERCENT_COMP_MB_READ"/>
            <!--
                Calculated value: ((Compressed MBs Sent/sec / MBs Sent/sec) * 100) 
            --> 
            <xs:enumeration value="PERCENT_COMP_MB_WRITTEN"/>
            <!--
                Calculated value: ((Compressed MBs Sent and Received/sec / MBs Sent and Recieved/sec) * 100)
            --> 
            <xs:enumeration value="PERCENT_COMP_MB"/>
            <!--
                The time that R2 is behind R1 (RPO). This is calculated as the last cycle time plus the time since last switch. In a regular case, the cycles switch every ~30 sec and the samples are taken every few minutes, therefore this counter may not show very significant data, however, when cycles elongate beyond the sample time, this counter can help indicate an estimate of the RPO.
            --> 
            <xs:enumeration value="R1_R2_LAG_TIME"/>
            <!--
                The mean time (in secs) of the last 16 restores. (Calculated as true averages, e.g., if only 8 restores have occurred, the average represents those 8 restores only.)
            --> 
            <xs:enumeration value="R2_AVG_RESTORE_TIME"/>
            <!--
                The  time, in seconds, that the restore of the last active cycle took to complete. The restore is an operation done by the DA and RA to mark the tracks in the apply cycle as Write Pending to the local drives. This operation is usually a very quick cache operation, unless one of the volumes reaches its WP limit. The importance of this counter is that is shows one of the common reasons for an increase in the cycle time.
            --> 
            <xs:enumeration value="R2_LAST_RESTORE_TIME"/>
            <!--
                The parameter establishing the percent of system write pendings at which an RDF/A session will drop.
            --> 
            <xs:enumeration value="RDFA_MAX_CACHE_USAGE"/>
            <!--
                Indicates if group is RDFA (0/1).
            --> 
            <xs:enumeration value="RDFA_SESSION_INDICATOR"/>
            <!--
                Indicates if RDF/A group is active (0/1). 
            --> 
            <xs:enumeration value="RDFA_ACTIVE_INDICATOR"/>
            <!--
                The number of IOs/sec being transmitted across the links for this session.
            --> 
            <xs:enumeration value="RDF_R1_R2_IO_PER_SEC"/>
            <!--
                The number of IOs/sec being transmitted across the links for this session.
            --> 
            <xs:enumeration value="RDF_R2_R1_IO_PER_SEC"/>
            <!--
                The number of MB/sec being transmitted across the links for this session.
            --> 
            <xs:enumeration value="RDF_R1_R2_MB_PER_SEC"/>
            <!--
                The number of MB/sec being transmitted across the links for this session.
            --> 
            <xs:enumeration value="RDF_R2_R1_MB_PER_SEC"/>
            <!--
                The total number of read operations that were immediately satisfied by cache.
            --> 
            <xs:enumeration value="READ_HIT_PER_SEC"/>
            <!--
                The number of tracks read from the R2 (host reads + copy).
            --> 
            <xs:enumeration value="READS"/>
            <!--
                The number of the SRDF/A session.
            --> 
            <xs:enumeration value="SESSION_NUM"/>
            <!--
                The order in which SRDF/A groups are dropped out of SRDF/A in the event of a cache limit being reached. The highest priority is 1, the lowest is 64, and the default is 33.
            --> 
            <xs:enumeration value="SESSION_PRIORITY"/>
            <!--
                The number of cache slots marked as write pending for the system.
            --> 
            <xs:enumeration value="SYS_WRITE_PENDING"/>
            <!--
                The time (in secs) since the last switch from active to inactive or vice versa. Since in a regular case the cycles switch every ~30 sec and the samples are taken every few minutes, this counter may not show very significant data, however, when cycles elongate beyond the sample time, this counter can help indicate an estimate of the R1 to R1 lag time.
            --> 
            <xs:enumeration value="TIME_LAST_SWITCH"/>
            <!--
                The n+C51umber of RDF/A writes pending.
            --> 
            <xs:enumeration value="TOTAL_CACHE_SLOT_IN_USE"/>
            <!--
                The number of writes to a slot already in the active cycle. Total host adapter repeat writes, measured in write commands to SRDF/A volumes only. This counter helps estimate the cache locality of reference, i.e., how much cache is saved by the re-writes. This does not give any indication to the bandwidth locality of reference.
            --> 
            <xs:enumeration value="TOTAL_HA_REPEAT_WRITE_PER_SEC"/>
            <!--
                The t+C16otal host adapter writes, measured in write commands to SRDF/A volumes only.
            --> 
            <xs:enumeration value="TOTAL_HA_WRITE_PER_SEC"/>
            <!--
                The number of tracks for all the SRDF/A volumes in the session that have not been committed to the R2 volume.
            --> 
            <xs:enumeration value="UNCOMMIT_TRACK"/>
            <!--
                The maximum number of write-pending slots for the entire Symmetrix system.
            --> 
            <xs:enumeration value="WP_LIMIT"/>
            <!--
                The number of write requests to the RDF director per second.
            --> 
            <xs:enumeration value="WRITES"/>
            <!--
                The number of reads per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of writes per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_IOS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            -->
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of reads/writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number  of reads per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number  of writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="RDFAParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:raGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:RDFAMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfaParam" type="tns:RDFAParamType"/>

    <xs:complexType name="RDFAResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ACTIVE_CYCLE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_CYCLE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_CYCLE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_IO_SERVICE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMP_MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="CONSISTENCY_PROTECTION" type="xs:float" minOccurs="0"/>
                    <xs:element name="CYCLE_NUM" type="xs:float" minOccurs="0"/>
                    <xs:element name="DSE_THRESHOLD" type="xs:float" minOccurs="0"/>
                    <xs:element name="DSE_USED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="DURATION_LAST_CYCLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="HIGHT_WATER_MARK" type="xs:float" minOccurs="0"/>
                    <xs:element name="HOST_WRITE_IOS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="HOST_WRITE_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="INACTIVE_CYCLE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="LOCAL_CACHE_USAGE" type="xs:float" minOccurs="0"/>
                    <xs:element name="LOCAL_WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="MAX_CYCLE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MIN_CYCLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="NUM_COMP_LINKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="NUM_DEV_IN_SESSION" type="xs:float" minOccurs="0"/>
                    <xs:element name="NUM_LINKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="REMOTE_CACHE_USAGE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMP_MB" type="xs:float" minOccurs="0"/>
                    <xs:element name="R1_R2_LAG_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="R2_AVG_RESTORE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="R2_LAST_RESTORE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDFA_MAX_CACHE_USAGE" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDFA_SESSION_INDICATOR" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDFA_ACTIVE_INDICATOR" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDF_R1_R2_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDF_R2_R1_IO_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDF_R1_R2_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="RDF_R2_R1_MB_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READ_HIT_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="SESSION_NUM" type="xs:float" minOccurs="0"/>
                    <xs:element name="SESSION_PRIORITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="SYS_WRITE_PENDING" type="xs:float" minOccurs="0"/>
                    <xs:element name="TIME_LAST_SWITCH" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_CACHE_SLOT_IN_USE" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_HA_REPEAT_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_HA_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="UNCOMMIT_TRACK" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP_LIMIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="rdfaResult" type="tns:RDFAResultType"/>

    <!--
        CachePartition Keys
    -->
    <xs:complexType name="CachePartitionKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="cachePartitionKeyParam" type="tns:CachePartitionKeyParamType"/>

    <xs:complexType name="CachePartitionInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:cachePartitionId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="cachePartitionInfo" type="tns:CachePartitionInfoType"/>

    <xs:complexType name="CachePartitionKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:cachePartitionInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="cachePartitionKeyResult" type="tns:CachePartitionKeyResultType"/>

    <!--
        CachePartition Metrics
    -->
    <xs:simpleType name="CachePartitionMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of cache partition slots acquired from other cache.
            --> 
            <xs:enumeration value="ACQUIRE_SLOT_COUNT"/>
            <!--
                Calculated value: (destage slot age) / (destaged slot count).
            --> 
            <xs:enumeration value="AVG_AGE_GIVEN_DESTAGE"/>
            <!--
                Calculated value: (age non WP slots) / ((writes to all non WP slots) - (writes to young non WP slots)) 
            --> 
            <xs:enumeration value="AVG_AGE_WRITE_TO_NON_WP_SLOT"/>
            <!--
                The average time accumulated for non WP cache slots.
            --> 
            <xs:enumeration value="AGE_NON_WP_SLOT"/>
            <!--
                The average fall-through-time w/ 1:08:16 second decay. Decay is a moving average, where the decay time is the "average time" average.
            --> 
            <xs:enumeration value="CACHE_AGE_GT_1_HR"/>
            <!--
                The average fall-through-time w/ 64 second decay. Decay is a moving average, where the decay time is the "average time" average.
            --> 
            <xs:enumeration value="CACHE_AGE_GT_1_MIN"/>
            <!--
                The average fall-through-time w/ 8:32 second decay. Decay is a moving average, where the decay time is the "average time" average.
            --> 
            <xs:enumeration value="CACHE_AGE_GT_10_MIN"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_1"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_2"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_3"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_4"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_5"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_6"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_7"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_HIT_AGE_8"/>
            <!--
                The number of partition read hits under 4 seconds. A slot in this age range satisfied a host read request (cache hit) and was promoted to age zero.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_1"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_2"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_3"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_4"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_5"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_6"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_7"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_AGE_8"/>
            <!--
                The number of partition fall throughs under 8 seconds. A slot in this age range was removed or recycled as a new slot for other data.
            --> 
            <xs:enumeration value="CACHE_SLOT_USED"/>
            <!--
                The average time accumulated for destaged cache slots.
            --> 
            <xs:enumeration value="DESTAGE_SLOT_AGE"/>
            <!--
                The number of cache slots destaged.
            --> 
            <xs:enumeration value="DESTAGE_SLOT_COUNT"/>
            <!--
                The amount of cache donated from other cache.
            --> 
            <xs:enumeration value="DONATION_GIVE_COUNT"/>
            <!--
                The amount of cache donated to other cache.
            --> 
            <xs:enumeration value="DONATION_TAKE_COUNT"/>
            <!--
                The length of time a cache slot must age before being available for donation.
            --> 
            <xs:enumeration value="DONATION_TIME"/>
            <!--
                The number of host IOs per second.
            --> 
            <xs:enumeration value="IO_RATE"/>
            <!--
                The calculation of the total writes pending minus the remote writes pending.
            --> 
            <xs:enumeration value="LOCAL_WP"/>
            <!--
                The maximum slot allocation for a partition (from target % to 100%).
            --> 
            <xs:enumeration value="MAX_CACHE_PERCENT"/>
            <!--
                The partition will not go below this allocation (from 0% to target %).
            --> 
            <xs:enumeration value="MIN_CACHE_PERCENT"/>
            <!--
                The number of host MBs per second.
            --> 
            <xs:enumeration value="MB_RATE"/>
            <!--
                Calculated value: (WP Count / (total slots * % Cache Used / 100) * 100) 
            --> 
            <xs:enumeration value="PERCENT_BUSY"/>
            <!--
                The percent of IOs that were immediately satisfied.
            --> 
            <xs:enumeration value="PERCENT_HIT"/>
            <!--
                The number of writes pending for a remote system.
            --> 
            <xs:enumeration value="REMOTE_WP"/>
            <!--
                The percent of cache that is used.
            --> 
            <xs:enumeration value="SIZE"/>
            <!--
                The percent of total cache allocated to this partition; cannot be less than 10% or larger than 90% and the sum of all targets must be equal to 100%.
            --> 
            <xs:enumeration value="TARGET_CACHE_PERCENT"/>
            <!--
                The partition fall-through-time events (FT).
            --> 
            <xs:enumeration value="TOTAL_REPLACE_SLOTS"/>
            <!--
               A sampled value at the time of data collection. 
            --> 
            <xs:enumeration value="WP"/>
            <!--
                The percent of the target % at which writes are delayed The range is from 40% to 80%. If the target is 30% and the write pending limit is 80%, then the actual limit is 24% of the cache.
            --> 
            <xs:enumeration value="WP_LIMIT"/>
            <!--
                The number of writes to all non WP cache slots that were 4 seconds or older.
            --> 
            <xs:enumeration value="WRITES_TO_ALL_NON_WP_SLOT"/>
            <!--
                The number of writes to cache slots that were less than four seconds old.
            --> 
            <xs:enumeration value="WRITES_TO_YOUNG_NON_WP_SLOT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="CachePartitionParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:cachePartitionId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:CachePartitionMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="cachePartitionParam" type="tns:CachePartitionParamType"/>

    <xs:complexType name="CachePartitionResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ACQUIRE_SLOT_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_AGE_GIVEN_DESTAGE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_AGE_WRITE_TO_NON_WP_SLOT" type="xs:float" minOccurs="0"/>
                    <xs:element name="AGE_NON_WP_SLOT" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_AGE_GT_1_HR" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_AGE_GT_1_MIN" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_AGE_GT_10_MIN" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_3" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_5" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_6" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_7" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_HIT_AGE_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_1" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_2" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_3" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_4" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_5" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_6" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_7" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_AGE_8" type="xs:float" minOccurs="0"/>
                    <xs:element name="CACHE_SLOT_USED" type="xs:float" minOccurs="0"/>
                    <xs:element name="DESTAGE_SLOT_AGE" type="xs:float" minOccurs="0"/>
                    <xs:element name="DESTAGE_SLOT_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="DONATION_GIVE_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="DONATION_TAKE_COUNT" type="xs:float" minOccurs="0"/>
                    <xs:element name="DONATION_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="LOCAL_WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="MAX_CACHE_PERCENT" type="xs:float" minOccurs="0"/>
                    <xs:element name="MIN_CACHE_PERCENT" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_HIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="REMOTE_WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="TARGET_CACHE_PERCENT" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_REPLACE_SLOTS" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP" type="xs:float" minOccurs="0"/>
                    <xs:element name="WP_LIMIT" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES_TO_ALL_NON_WP_SLOT" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES_TO_YOUNG_NON_WP_SLOT" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="cachePartitionResult" type="tns:CachePartitionResultType"/>

    <!--
        DiskGroup Keys
    -->
    <xs:complexType name="DiskGroupKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskGroupKeyParam" type="tns:DiskGroupKeyParamType"/>

    <xs:complexType name="DiskGroupInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:diskGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskGroupInfo" type="tns:DiskGroupInfoType"/>

    <xs:complexType name="DiskGroupKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:diskGroupInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskGroupKeyResult" type="tns:DiskGroupKeyResultType"/>

    <!--
        DiskGroup Metrics
    -->
    <xs:simpleType name="DiskGroupMetric">
        <xs:restriction base="xs:string">
            <!--
                The average number of kilobytes for a single read command.
            --> 
            <xs:enumeration value="AVG_KB_PER_READ"/>
            <!--
                The average number of kilobytes for a single write command.
            --> 
            <xs:enumeration value="AVG_KB_PER_WRITE"/>
            <!--
                The number of BE requests per GB of disk. (BE Reads + BE Writes) / allocated capacity With FAST moving active extents to higher tiers, this metric is a good indication of success (the IO density on Flash tiers should be higher than the density on SATA tiers.)
            --> 
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The total number of read and write IOs per second.
            --> 
            <xs:enumeration value="IO_RATE"/>
            <!--
                The total number of MBs per second for the disk group.
            --> 
            <xs:enumeration value="MB_RATE"/>
            <!--
                The read throughput (MBs) of the disk group per second.
            --> 
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The write throughput (MBs) of the disk group per second.
            --> 
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of time that the disk group is busy serving IOs.
            --> 
            <xs:enumeration value="PERCENT_DISK_BUSY"/>
            <!--
                The percent of time the disk group is idle.
            --> 
            <xs:enumeration value="PERCENT_DISK_IDLE"/>
            <!--
                The percent of the disk group capacity that is free.
            --> 
            <xs:enumeration value="PERCENT_FREE_CAPACITY"/>
            <!--
                The percent of the disk group capacity that is allocated.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of reads per second for the disk group.
            --> 
            <xs:enumeration value="READS"/>
            <!--
                The average time it took the disk group to serve one read command.
            --> 
            <xs:enumeration value="RESPONSE_TIME_READ"/>
            <!--
                The average time it took the disk group to service IO.
            --> 
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The average time it took the disk group to serve one write command.
            --> 
            <xs:enumeration value="RESPONSE_TIME_WRITE"/>
            <!--
                The total number of read commands, write commands, skip mask commands, verify commands, XOR write commands, and XOR write-read commands performed by the disk group each second.
            --> 
            <xs:enumeration value="SCSI_COMM"/>
            <!--
                The total capacity allocated for all the disks in the disk group.
            --> 
            <xs:enumeration value="USED_DISK_CAPACITY_GB"/>
            <!--
                The number of writes per second for the disk group.
            --> 
            <xs:enumeration value="WRITES"/>
            <!--
                The total capacity of all the disks in the disk group.
            --> 
            <xs:enumeration value="TOTAL_DISK_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DiskGroupParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:diskGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:DiskGroupMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskGroupParam" type="tns:DiskGroupParamType"/>

    <xs:complexType name="DiskGroupResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_KB_PER_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_KB_PER_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_FREE_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="SCSI_COMM" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="diskGroupResult" type="tns:DiskGroupResultType"/>

    <!--
        DSEPool Keys
    -->
    <xs:complexType name="DSEPoolKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="dsePoolKeyParam" type="tns:DSEPoolKeyParamType"/>

    <xs:complexType name="PoolInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:poolId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="poolInfo" type="tns:PoolInfoType"/>

    <xs:complexType name="PoolKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:poolInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="poolKeyResult" type="tns:PoolKeyResultType"/>

    <!--
        DSEPool Metrics
    -->
    <xs:simpleType name="DSEPoolMetric">
        <xs:restriction base="xs:string">
            <!--
                The allocated pool capacity in GBs.
            --> 
            <xs:enumeration value="ALLOCATED_POOL_CAPACITY_GB"/>
            <!--
                The average time it takes cache to respond to a read request by the disk directors.
            --> 
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a read request by the disk directors to the cache.
            --> 
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the read request on the queue and the DA picks it up; this can be considered queue time.
            --> 
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            --> 
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                Calculated value: (MBs read per sec + MBs written per sec) 
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            --> 
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The enabled pool capacity in GBs.
            --> 
            <xs:enumeration value="ENABLED_POOL_CAPACITY_GB"/>
            <!--
                The percent of the pools total capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The  total pool capacity in GBs.
            --> 
            <xs:enumeration value="TOTAL_POOL_CAPACITY_GB"/>
            <!--
                The  used pool capacity in GBs.
            --> 
            <xs:enumeration value="USED_POOL_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DSEPoolParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:poolId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:DSEPoolMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="dsePoolParam" type="tns:DSEPoolParamType"/>

    <xs:complexType name="DSEPoolResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ALLOCATED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="ENABLED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="dsePoolResult" type="tns:DSEPoolResultType"/>

    <!--
        SnapPool Keys
    -->
    <xs:complexType name="SnapPoolKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="snapPoolKeyParam" type="tns:SnapPoolKeyParamType"/>

    <!--
        SnapPool Metrics
    -->
    <xs:simpleType name="SnapPoolMetric">
        <xs:restriction base="xs:string">
             <!--
                The allocated pool capacity in GBs.
            --> 
            <xs:enumeration value="ALLOCATED_POOL_CAPACITY_GB"/>
            <!--
                The average time it takes cache to respond to a read request by the disk directors.
            --> 
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a read request by the disk directors to the cache.
            --> 
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the read request on the queue and the DA picks it up; this can be considered queue time.
            --> 
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            --> 
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                Calculated value: (MBs read per sec + MBs written per sec) 
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            --> 
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The enabled pool capacity in GBs.
            --> 
            <xs:enumeration value="ENABLED_POOL_CAPACITY_GB"/>
            <!--
                The percent of the pools total capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The  total pool capacity in GBs.
            --> 
            <xs:enumeration value="TOTAL_POOL_CAPACITY_GB"/>
            <!--
                The  used pool capacity in GBs.
            --> 
            <xs:enumeration value="USED_POOL_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="SnapPoolParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:poolId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:SnapPoolMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="snapPoolParam" type="tns:SnapPoolParamType"/>

    <xs:complexType name="SnapPoolResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ALLOCATED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="ENABLED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="snapPoolResult" type="tns:SnapPoolResultType"/>

    <!--
        ThinPool Keys
    -->
    <xs:complexType name="ThinPoolKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinPoolKeyParam" type="tns:ThinPoolKeyParamType"/>

    <!--
        ThinPool Metrics
    -->
    <xs:simpleType name="ThinPoolMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of GBs of the virtual pool that are allocated.
            --> 
            <xs:enumeration value="ALLOCATED_POOL_CAPACITY_GB"/>
            <!--
                The total number of tracks of the virtual pool.
            --> 
            <xs:enumeration value="ALLOCATED_TRACKS"/>
            <!--
                The average time it takes cache to satisfy IO from the disk directors.
            --> 
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a request by the disk directors to cache.
            --> 
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the request on the queue and the DA picks it up - can be considered queue time.
            --> 
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            --> 
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                Calculated value: (MBs read per sec + MBs written per sec) 
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            --> 
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The percent of the back-end IO that were read requests.
            --> 
            <xs:enumeration value="BE_PERCENT_READ"/>
            <!--
                The percent of the back-end IO that were write requests.
            --> 
            <xs:enumeration value="BE_PERCENT_WRITE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The average time it took the disk to service IO (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME"/>
            <!--
                The average time it took the disk to serve one read command (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME_READ"/>
            <!--
                The average time it took the disk to serve one write command (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME_WRITE"/>
            <!--
                The number of compressed tracks of the virtual pool.
            --> 
            <xs:enumeration value="COMPRESSED_TRACKS"/>
            <!--
                The number of tracks leaving the pool.
            --> 
            <xs:enumeration value="EGRESS_TRACKS"/>
            <!--
                The capacity of the virtual pool that is enabled.
            --> 
            <xs:enumeration value="ENABLED_POOL_CAPACITY_GB"/>
            <!--
                The number of tracks entering the pool.
            --> 
            <xs:enumeration value="INGRESS_TRACKS"/>
            <!--
                The number of BE requests per GB of disk. (BE Reads + BE Writes) / allocated capacity With FAST moving active extents to higher tiers, this metric is a good indication of success (the IO density on Flash tiers should be higher than the density on SATA tiers.)
            --> 
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The percent of compressed tracks in a virtual pool.
            --> 
            <xs:enumeration value="PERCENT_COMPRESSED_TRACKS"/>
            <!--
                The percent of the pools capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The average time that it took the Symmetrix RDF/S to serve one write IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_RDF_WRITE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read miss IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_READ_MISS_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write miss IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_WP_DISCONNECT_TIME"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The total capacity of the virtual pool.
            --> 
            <xs:enumeration value="TOTAL_POOL_CAPACITY_GB"/>
            <!--
                The capacity of the virtual pool that is used.
            --> 
            <xs:enumeration value="USED_POOL_CAPACITY_GB"/>
            <!--
                The number of reads per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READ_HITS"/>
            <!--
                The number of writes per second that found in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITE_HITS"/>
            <!--
                The number of Reads per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_READS"/>
            <!--
                The number of Writes per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_WRITES"/>
            <!--
                The number of IOs per second received in the XtremSW Cache.
            -->
            <xs:enumeration value="XC_IOS"/>
            <!--
                The number of Reads/Writes that skipped the XtremSW Cache.
            -->
            <xs:enumeration value="XC_SKIPPED_IOS"/>
            <!--
                The number of reads/writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_HITS"/>
            <!--
                The number  of reads per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_READS"/>
            <!--
                The number  of writes per second that has been found in the XtremSW Cache de-dup cache.
            -->
            <xs:enumeration value="XC_DEDUP_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_READS"/>
            <!--
                The percent of total XtremSW Cache write IO operations performed each second by all of the Symmetrix volumes.
            -->
            <xs:enumeration value="XC_PER_WRITES"/>
            <!--
                The percent of total XtremSW Cache read IO operations performed each second by all of the Symmetrix volumes that were served by the XtremSW Cache cache.
            -->
            <xs:enumeration value="XC_PER_READ_HITS"/>
            <!--
                Cumulative number of host MBs read by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_READ"/>
            <!--
                Cumulative number of host MBs written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS_WRITTEN"/>
            <!--
                Cumulative number of host MBs read and written by the StremSW Cache per second.
            -->
            <xs:enumeration value="XC_TOTAL_MBS"/>
            <!--
                The average time it took the XtremSW cache to serve one read.
            -->
            <xs:enumeration value="XC_READ_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one write.
            -->
            <xs:enumeration value="XC_WRITE_RESPONSE_TIME"/>
            <!--
                The average time it took the XtremSW cache to serve one IO.
            -->
            <xs:enumeration value="XC_RESPONSE_TIME"/>
            <!--
                The average size of a read served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_READ_SIZE"/>
            <!--
                The average size of a write served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_WRITE_SIZE"/>
            <!--
                The average size of an IO served by the XtremSW Cache.
            -->
            <xs:enumeration value="XC_AVG_IO_SIZE"/>
            <!--
                Number of read requests each second performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_READS"/>
            <!--
                Number of host MBs read each second directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_MB_READ"/>
            <!--
                The average read size of the read requests performed directly from disks bypassing the cache.
            -->
            <xs:enumeration value="ORM_AVG_READ_SIZE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ThinPoolParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:poolId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:ThinPoolMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinPoolParam" type="tns:ThinPoolParamType"/>

    <xs:complexType name="ThinPoolResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ALLOCATED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="EGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ENABLED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="INGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_RDF_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_MISS_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WP_DISCONNECT_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_SKIPPED_IOS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_DEDUP_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_PER_READ_HITS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS_WRITTEN" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_TOTAL_MBS" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_READ_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_WRITE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_WRITE_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="XC_AVG_IO_SIZE" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_MB_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="ORM_AVG_READ_SIZE" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinPoolResult" type="tns:ThinPoolResultType"/>

    <!--
        ThinTier Keys
    -->
    <xs:complexType name="ThinTierKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinTierKeyParam" type="tns:ThinTierKeyParamType"/>

    <xs:complexType name="TierInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:tierId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierInfo" type="tns:TierInfoType"/>

    <xs:complexType name="TierKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:tierInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierKeyResult" type="tns:TierKeyResultType"/>

    <!--
        ThinTier Metrics
    -->
    <xs:simpleType name="ThinTierMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of GBs of the virtual pool that are allocated.
            --> 
            <xs:enumeration value="ALLOCATED_POOL_CAPACITY_GB"/>
            <!--
                The total number of tracks of the virtual pool.
            --> 
            <xs:enumeration value="ALLOCATED_TRACKS"/>
            <!--
                The average time it takes cache to satisfy IO from the disk directors.
            --> 
            <xs:enumeration value="AVG_BE_DISK_TIME"/>
            <!--
                The average time it takes to make a request by the disk directors to cache.
            --> 
            <xs:enumeration value="AVG_BE_REQ_TIME"/>
            <!--
                The time from the point when the HA puts the request on the queue and the DA picks it up; this can be considered queue time.
            --> 
            <xs:enumeration value="AVG_BE_TASK_TIME"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            --> 
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                Calculated value: (MBs read per sec + MBs written per sec) 
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            --> 
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The percent of the back-end IO that were read requests.
            --> 
            <xs:enumeration value="BE_PERCENT_READ"/>
            <!--
                The percent of the back-end IO that were write requests.
            --> 
            <xs:enumeration value="BE_PERCENT_WRITE"/>
            <!--
                The number of read requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The average time it took the disk to service IO (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME"/>
            <!--
                The average time it took the disk to serve one read command (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME_READ"/>
            <!--
                The average time it took the disk to serve one write command (DATA pool).
            --> 
            <xs:enumeration value="BE_RESPONSE_TIME_WRITE"/>
            <!--
                The number of compressed tracks of the virtual pool.
            --> 
            <xs:enumeration value="COMPRESSED_TRACKS"/>
            <!--
                The number of tracks leaving the pool.
            --> 
            <xs:enumeration value="EGRESS_TRACKS"/>
            <!--
                The capacity of the virtual pool that is enabled.
            --> 
            <xs:enumeration value="ENABLED_POOL_CAPACITY_GB"/>
            <!--
                The number of tracks entering the pool.
            --> 
            <xs:enumeration value="INGRESS_TRACKS"/>
            <!--
                The number of backend reads and writes per GB of disk.  
            --> 
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The percent of compressed tracks in a virtual pool.
            --> 
            <xs:enumeration value="PERCENT_COMPRESSED_TRACKS"/>
            <!--
                The percent of the pools capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The average time that it took the Symmetrix RDF/S to serve one write IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_RDF_WRITE_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one read miss IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_READ_MISS_TIME"/>
            <!--
                The average time that it took the Symmetrix to serve one write miss IO for this pool.
            --> 
            <xs:enumeration value="SAMPLED_AVG_WP_DISCONNECT_TIME"/>
            <!--
                The number of read/write requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The total capacity of the virtual pool.
            --> 
            <xs:enumeration value="TOTAL_POOL_CAPACITY_GB"/>
            <!--
                The capacity of the virtual pool that is used.
            --> 
            <xs:enumeration value="USED_POOL_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ThinTierParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:tierId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:ThinTierMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinTierParam" type="tns:ThinTierParamType"/>

    <xs:complexType name="ThinTierResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ALLOCATED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_DISK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_REQ_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_BE_TASK_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_PERCENT_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="EGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="ENABLED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="INGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_RDF_WRITE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_READ_MISS_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="SAMPLED_AVG_WP_DISCONNECT_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="thinTierResult" type="tns:ThinTierResultType"/>

    <!--
        StorageTier Keys
    -->
    <xs:complexType name="StorageTierKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageTierKeyParam" type="tns:StorageTierKeyParamType"/>

    <!--
        StorageTier Metrics
    -->
    <xs:simpleType name="StorageTierMetric">
        <xs:restriction base="xs:string">
            <!--
                The average number of kilobytes for a single read command.
            --> 
            <xs:enumeration value="AVG_KB_PER_READ"/>
            <!--
                The average number of kilobytes for a single write command.
            --> 
            <xs:enumeration value="AVG_KB_PER_WRITE"/>
            <!--
                The number of BE requests per GB of disk. (Reads + Writes) / total capacity With FAST moving active extents to higher tiers, this metric is a good indication of success (the IO density on Flash tiers should be higher than the density on SATA tiers.)
            --> 
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The total number of read and write IOs per second.
            --> 
            <xs:enumeration value="IO_RATE"/>
            <!--
                The total MBs read and written per second.
            --> 
            <xs:enumeration value="MB_RATE"/>
            <!--
                The read throughput (MBs) of the disk per second.
            --> 
            <xs:enumeration value="MB_READ_PER_SEC"/>
            <!--
                The write throughput (MBs) of the disk per second.
            --> 
            <xs:enumeration value="MB_WRITE_PER_SEC"/>
            <!--
                The percent of time that the disk is busy serving IOs.
            --> 
            <xs:enumeration value="PERCENT_DISK_BUSY"/>
            <!--
                The percent of time the disk is idle.
            --> 
            <xs:enumeration value="PERCENT_DISK_IDLE"/>
            <!--
                The percent of the disk capacity that is free.
            --> 
            <xs:enumeration value="PERCENT_FREE_CAPACITY"/>
            <!--
                The percent of the disk capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of reads per second for the disk.
            --> 
            <xs:enumeration value="READS"/>
            <!--
                The average time it took the disk to serve one read command.
            --> 
            <xs:enumeration value="RESPONSE_TIME_READ"/>
            <!--
                Calculated value: (Total Read Time/sec + Total Write Time/sec) / (Reads/sec + Writes/sec) 
            --> 
            <xs:enumeration value="RESPONSE_TIME"/>
            <!--
                The average time it took the disk to serve one write command.
            --> 
            <xs:enumeration value="RESPONSE_TIME_WRITE"/>
            <!--
                The total number of read commands, write commands, skip mask commands, verify commands, XOR write commands, and XOR write-read commands performed by the Symmetrix disk each second.
            --> 
            <xs:enumeration value="SCSI_COMM"/>
            <!--
                The used capacity of the disk in GBs.
            --> 
            <xs:enumeration value="USED_DISK_CAPACITY_GB"/>
            <!--
                The number of writes per second for the disk.
            --> 
            <xs:enumeration value="WRITES"/>
            <!--
                The total capacity of the disk in GBs.
            --> 
            <xs:enumeration value="TOTAL_DISK_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="StorageTierParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:tierId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:StorageTierMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageTierParam" type="tns:StorageTierParamType"/>

    <xs:complexType name="StorageTierResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="AVG_KB_PER_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_KB_PER_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_READ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_WRITE_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_BUSY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_DISK_IDLE" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_FREE_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_READ" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME" type="xs:float" minOccurs="0"/>
                    <xs:element name="RESPONSE_TIME_WRITE" type="xs:float" minOccurs="0"/>
                    <xs:element name="SCSI_COMM" type="xs:float" minOccurs="0"/>
                    <xs:element name="USED_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_DISK_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageTierResult" type="tns:StorageTierResultType"/>

    <!--
        FEDirectorByPort Keys
    -->
    <xs:complexType name="FEDirectorByPortKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:directorId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorByPortKeyParam" type="tns:FEDirectorByPortKeyParamType"/>

    <xs:complexType name="FEDirectorByPortInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:portId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorByPortInfo" type="tns:FEDirectorByPortInfoType"/>

    <xs:complexType name="FEDirectorByPortKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:feDirectorByPortInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorByPortKeyResult" type="tns:FEDirectorByPortKeyResultType"/>

    <!--
        FEDirectorByPort Metrics
    -->
    <xs:simpleType name="FEDirectorByPortMetric">
        <xs:restriction base="xs:string">
            <!--
                A host command for data transfer. 
            --> 
            <xs:enumeration value="IO_RATE"/>
            <!--
                The total IO (reads and writes) per second in MBs.
            --> 
            <xs:enumeration value="MB_RATE"/>
            <!--
                The average size of IO requests in KB.
            --> 
            <xs:enumeration value="AVG_REQ_SIZE_KB"/>
            <!--
                The amount of time the director port is busy.
            --> 
            <xs:enumeration value="UTILIZATION"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="FEDirectorByPortParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:directorId"/>
                    <xs:element ref="cmn:portId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:FEDirectorByPortMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorByPortParam" type="tns:FEDirectorByPortParamType"/>

    <xs:complexType name="FEDirectorByPortResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="IO_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="MB_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="AVG_REQ_SIZE_KB" type="xs:float" minOccurs="0"/>
                    <xs:element name="UTILIZATION" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="feDirectorByPortResult" type="tns:FEDirectorByPortResultType"/>

    <!--
        FASTPolicy Keys
    -->
    <xs:complexType name="FASTPolicyKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="fastPolicyKeyParam" type="tns:FASTPolicyKeyParamType"/>

    <xs:complexType name="FASTPolicyInfoType">
        <xs:complexContent>
            <xs:extension base="tns:StatInfoType">
                <xs:sequence>
                    <xs:element ref="cmn:fastPolicyId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="fastPolicyInfo" type="tns:FASTPolicyInfoType"/>

    <xs:complexType name="FASTPolicyKeyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="tns:fastPolicyInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="fastPolicyKeyResult" type="tns:FASTPolicyKeyResultType"/>

    <!--
        FASTPolicy Metrics
    -->
    <xs:simpleType name="FASTPolicyMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of GBs of the virtual pool that are allocated to the FAST policy.
            --> 
            <xs:enumeration value="ALLOCATED_POOL_CAPACITY_GB"/>
            <!--
                The number of GBs of the storage group that are allocated to the FAST policy.
            --> 
            <xs:enumeration value="ALLOCATED_SG_CAPACITY_GB"/>
            <!--
                The GBs in the storage group that currently do not reside on the tiers defined in the FAST policy.
            --> 
            <xs:enumeration value="ALLOCATED_SG_OOP_CAPACITY_GB"/>
            <!--
                The number of MBs transferred each second between cache and the director.
            --> 
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The number of tracks leaving the pool.
            --> 
            <xs:enumeration value="EGRESS_TRACKS"/>
            <!--
                The number of tracks entering the pool.
            --> 
            <xs:enumeration value="INGRESS_TRACKS"/>
            <!--
                The percent of the pools capacity that is used.
            --> 
            <xs:enumeration value="PERCENT_USED_CAPACITY"/>
            <!--
                The number of data requests each second performed by the disk directors to cache.
            --> 
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The total capacity of the virtual pool.
            --> 
            <xs:enumeration value="TOTAL_POOL_CAPACITY_GB"/>
            <!--
                The total capacity of the storage group.
            --> 
            <xs:enumeration value="TOTAL_SG_CAPACITY_GB"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="FASTPolicyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:fastPolicyId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:FASTPolicyMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="fastPolicyParam" type="tns:FASTPolicyParamType"/>

    <xs:complexType name="FASTPolicyResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="ALLOCATED_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_SG_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_SG_OOP_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="EGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="INGRESS_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_USED_CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_POOL_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_SG_CAPACITY_GB" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="fastPolicyResult" type="tns:FASTPolicyResultType"/>

    <!--
        TierByStorageGroup Keys
    -->
    <xs:complexType name="TierByStorageGroupKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:tierId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierByStorageGroupKeyParam" type="tns:TierByStorageGroupKeyParamType"/>

    <xs:complexType name="TierByStorageGroupPerfKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:tierId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierByStorageGroupPerfKeyParam" type="tns:TierByStorageGroupPerfKeyParamType"/>

    <!--
        TierByStorageGroup Metrics
    -->
    <xs:simpleType name="TierByStorageGroupMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of read requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The number of data requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            -->
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            -->
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The number of MBs transferred each second between cache and the director.
            -->
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The capacity of the storage group allocated to the tier.
            -->
            <xs:enumeration value="CAPACITY"/>
            <!--
                The number of backend reads and writes per GB of disk.
            -->
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The number of tracks prefetched per second.
            -->
            <xs:enumeration value="PREFETCHED_TRACKS_PER_SEC"/>
            <!--
                The number of MBs prefetched per second.
            -->
            <xs:enumeration value="PREFETCHED_MBYTES_PER_SEC"/>
            <!--
                The total number of allocated tracks.
            -->
            <xs:enumeration value="ALLOCATED_TRACKS"/>
            <!--
                The total number of tracks that are compressed.
            -->
            <xs:enumeration value="COMPRESSED_TRACKS"/>
            <!--
                The percent of tracks that are compressed.
            -->
            <xs:enumeration value="PERCENT_COMPRESSED_TRACKS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="TierByStorageGroupParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:tierId"/>
                    <xs:element ref="cmn:storageGroupId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:TierByStorageGroupMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierByStorageGroupParam" type="tns:TierByStorageGroupParamType"/>

    <xs:complexType name="TierByStorageGroupResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACKS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_MBYTES_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="tierByStorageGroupResult" type="tns:TierByStorageGroupResultType"/>

    <!--
        StorageGroupByTier Keys
    -->
    <xs:complexType name="StorageGroupByTierKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:storageGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupByTierKeyParam" type="tns:StorageGroupByTierKeyParamType"/>

    <xs:complexType name="StorageGroupByTierPerfKeyParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:storageGroupId"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupByTierPerfKeyParam" type="tns:StorageGroupByTierPerfKeyParamType"/>

    <!--
        StorageGroupByTier Metrics
    -->
    <xs:simpleType name="StorageGroupByTierMetric">
        <xs:restriction base="xs:string">
            <!--
                The number of read requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_READS"/>
            <!--
                The number of write requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="BE_WRITES"/>
            <!--
                The number of data requests each second performed by the disk directors to cache.
            -->
            <xs:enumeration value="TOTAL_BE_REQ_PER_SEC"/>
            <!--
                The number of MBs read by the disk directors from the disk each second.
            -->
            <xs:enumeration value="BE_MB_READ_RATE"/>
            <!--
                The number of MBs written to the disk from the disk director each second.
            -->
            <xs:enumeration value="BE_MB_WRITE_RATE"/>
            <!--
                The number of MBs transferred each second between cache and the director.
            -->
            <xs:enumeration value="BE_MB_TRANSFERED_PER_SEC"/>
            <!--
                The capacity of the storage group allocated to the tier.
            -->
            <xs:enumeration value="CAPACITY"/>
            <!--
                The number of backend reads and writes per GB of disk.
            -->
            <xs:enumeration value="IO_DENSITY"/>
            <!--
                The number of tracks prefetched per second.
            -->
            <xs:enumeration value="PREFETCHED_TRACKS_PER_SEC"/>
            <!--
                The number of MBs prefetched per second.
            -->
            <xs:enumeration value="PREFETCHED_MBYTES_PER_SEC"/>
            <!--
                The total number of allocated tracks.
            -->
            <xs:enumeration value="ALLOCATED_TRACKS"/>
            <!--
                The total number of tracks that are compressed.
            -->
            <xs:enumeration value="COMPRESSED_TRACKS"/>
            <!--
                The percent of tracks that are compressed.
            -->
            <xs:enumeration value="PERCENT_COMPRESSED_TRACKS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="StorageGroupByTierParamType">
        <xs:complexContent>
            <xs:extension base="cmn:ParamType">
                <xs:sequence>
                    <xs:element name="startDate" type="cmn:DateType"/>
                    <xs:element name="endDate" type="cmn:DateType"/>
                    <xs:element ref="cmn:symmetrixId"/>
                    <xs:element ref="cmn:storageGroupId"/>
                    <xs:element ref="cmn:tierId"/>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element name="metrics" type="tns:StorageGroupByTierMetric"/>
                    </xs:sequence>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupByTierParam" type="tns:StorageGroupByTierParamType"/>

    <xs:complexType name="StorageGroupByTierResultType">
        <xs:complexContent>
            <xs:extension base="cmn:ResultType">
                <xs:sequence>
                    <xs:element name="BE_READS" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_WRITES" type="xs:float" minOccurs="0"/>
                    <xs:element name="TOTAL_BE_REQ_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_READ_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_WRITE_RATE" type="xs:float" minOccurs="0"/>
                    <xs:element name="BE_MB_TRANSFERED_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="CAPACITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="IO_DENSITY" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_TRACKS_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="PREFETCHED_MBYTES_PER_SEC" type="xs:float" minOccurs="0"/>
                    <xs:element name="ALLOCATED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                    <xs:element name="PERCENT_COMPRESSED_TRACKS" type="xs:float" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="timestamp" type="cmn:DateType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="storageGroupByTierResult" type="tns:StorageGroupByTierResultType"/>
</xs:schema>
